var jobBtn=document.querySelector(".job-button"),eduBtn=document.querySelector(".edu-button"),langBtn=document.querySelector(".language-button"),skillBtn=document.querySelector(".skills-button"),btnDeleteAll=document.querySelector(".btn-delete-all"),downloadBtn=document.querySelector(".download"),createJob=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-job"),a=document.createElement("form");a.classList.add("job-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML='\n\t<label for="company" class="label">Firma:</label>\n\t<input type="text" placeholder="np. IT Software house" id="company" name="company" class="input" value="'.concat(e.company||"",'">\t\n\t<label for="job-title" class="label">Stanowisko:</label>\n\t<input type="text" placeholder="np. Specjalista" id="job-title" name="job-title" class="input" value="').concat(e.role||"",'">\n\t<label for="job-start" class="label">Od:</label>\n\t<input type="month" id="job-start" name="job-start" class="input" value="').concat(e.start||"",'">\n\t<label for="job-end" class="label">Do:</label>\n\t<input type="month" id="job-end" name="job-end" class="input" value="').concat(e.end||"",'">\t\n\t<label for="job-description" class="label">Opis:</label>\n\t<textarea id="job-description" name="job-description" class="textarea">').concat(e.description||"",'</textarea>\n\t<button type="button" class="delete">Usuń</button>'),a.querySelectorAll("input, textarea").forEach(function(e){e.addEventListener("input",saveJobData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveJobData()}),t.appendChild(a)},generateUserJob=function(){var s=document.querySelector(".cv-preview-job"),e=JSON.parse(localStorage.getItem("jobData"))||[];0<e.length&&(s.innerHTML='<h2 class="cv-preview-job-title">Doświadczenie:</h2>'),e.forEach(function(e){var t=document.createElement("div"),a=(t.classList.add("preview-job-box"),document.createElement("h3")),n=(a.classList.add("preview-job-box-title"),a.textContent=e.company,document.createElement("h4")),l=(n.classList.add("preview-job-role"),n.textContent=e.role,document.createElement("div")),r=(l.classList.add("preview-job-date"),document.createElement("p")),o=(r.classList.add("preview-job-from"),r.textContent=e.start,document.createElement("p")),c=(o.classList.add("preview-job-to"),o.textContent=e.end,document.createElement("p")),i=(c.classList.add("space"),c.textContent="-",document.createElement("p"));i.classList.add("preview-job-description"),i.textContent=e.description,l.append(r,c,o),t.append(a,n,l,i),s.append(t)})},saveJobData=function(){var e=document.querySelectorAll(".job-form"),o=[];e.forEach(function(e){var t,a,n,l,r;validateJobForm(e)&&(t=e.getAttribute("data-id")||Date.now().toString(),a=e.querySelector('[name="company"]').value,n=e.querySelector('[name="job-title"]').value,l=e.querySelector('[name="job-start"]').value,r=e.querySelector('[name="job-end"]').value,e=e.querySelector('[name="job-description"]').value,o.push({id:t,company:a,role:n,start:l,end:r,description:e}))}),localStorage.setItem("jobData",JSON.stringify(o)),document.querySelector(".cv-preview-job").innerHTML="",generateUserJob()},loadJobData=function(){(JSON.parse(localStorage.getItem("jobData"))||[]).forEach(function(e){createJob(e)}),generateUserJob()},validateJobForm=function(e){var t=!0,a=e.querySelector('[name="company"]'),n=e.querySelector('[name="job-title"]'),l=e.querySelector('[name="job-start"]'),r=e.querySelector('[name="job-end"]'),e=e.querySelector('[name="job-description"]');return[a,n,l,r,e].forEach(function(e){e.classList.remove("error")}),a.value.trim().length<2&&(a.classList.add("error"),t=!1),n.value.trim().length<2&&(n.classList.add("error"),t=!1),l.value&&r.value&&l.value>r.value&&(l.classList.add("error"),r.classList.add("error"),t=!1),0<e.value.trim().length&&e.value.trim().length<10&&(e.classList.add("error"),t=!1),t},createEduForm=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-edu"),a=document.createElement("form");a.classList.add("edu-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML='\n\t\t<label for="school" class="label">Szkoła/Uczelnia </label>\n        <input type="text" class="input" name="school" placeholder="Nazwa szkoły" value="'.concat(e.school||"",'" />\n\t\t<label for="degree" class="label">Kierunek/Stopień</label>\n        <input type="text" class="input" name="degree" placeholder="Stopień/tytuł" value="').concat(e.degree||"",'" />\n\t\t<label for="edu-start" class="label">Od:</label>\n        <input type="date"  class="input" name="edu-start" value="').concat(e.start||"",'" />\n\t\t<label for="edu-end" class="label">Do:</label>\n        <input type="date" class="input" name="edu-end" value="').concat(e.end||"",'" />\n        <button class="delete">Usuń</button>\n    '),a.querySelectorAll("input").forEach(function(e){e.addEventListener("input",saveEduData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveEduData()}),t.appendChild(a)},generateUserEdu=function(){var i=document.querySelector(".cv-preview-edu"),e=JSON.parse(localStorage.getItem("eduData"))||[];0<e.length&&(i.innerHTML='<h2 class="cv-preview-edu-title">Edukacja:</h2>'),e.forEach(function(e){var t=document.createElement("div"),a=(t.classList.add("preview-edu-box"),document.createElement("h3")),n=(a.classList.add("preview-edu-title"),a.textContent=e.school,document.createElement("h4")),l=(n.classList.add("preview-edu-role"),n.textContent=e.degree,document.createElement("div")),r=(l.classList.add("preview-edu-date"),document.createElement("p")),o=(r.classList.add("preview-edu-from"),r.textContent=e.start,document.createElement("p")),c=(o.classList.add("space"),o.textContent="-",document.createElement("p"));c.classList.add("preview-edu-to"),c.textContent=e.end,l.append(r,o,c),t.append(a,n,l),i.append(t)})},saveEduData=function(){var e=document.querySelectorAll(".edu-form"),r=[];e.forEach(function(e){var t,a,n,l;validateEduForm(e)&&(t=e.getAttribute("data-id")||Date.now().toString(),e.setAttribute("data-id",t),a=e.querySelector('[name="school"]').value,n=e.querySelector('[name="degree"]').value,l=e.querySelector('[name="edu-start"]').value,e=e.querySelector('[name="edu-end"]').value,r.push({id:t,school:a,degree:n,start:l,end:e}))}),localStorage.setItem("eduData",JSON.stringify(r)),document.querySelector(".cv-preview-edu").innerHTML="",generateUserEdu()},loadEduData=function(){(JSON.parse(localStorage.getItem("eduData"))||[]).forEach(function(e){createEduForm(e)}),generateUserEdu()},validateEduForm=function(e){var t=!0,a=e.querySelector('[name="school"]'),n=e.querySelector('[name="degree"]'),l=e.querySelector('[name="edu-start"]'),e=e.querySelector('[name="edu-end"]');return[a,n,l,e].forEach(function(e){e.classList.remove("error")}),a.value.trim().length<2&&(a.classList.add("error"),t=!1),l.value&&e.value&&l.value>e.value&&(l.classList.add("error"),e.classList.add("error"),t=!1),t},createLanguage=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-lang"),a=document.createElement("form");a.classList.add("language-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML='\n\t\t<label for="language" class="label">Język:</label>\n    \t<input type="text"  class="input" id="language" name="language" placeholder="Angielski" value="'.concat(e.language||"",'">\n    \t<label for="level" class="label"></label>\n      \t<input type="text" class="input" id="level" name="level" placeholder="C1" value="').concat(e.level||"",'">\n     \t<button class="delete">Usuń</button>\n\t'),a.querySelectorAll("input").forEach(function(e){e.addEventListener("input",saveLangData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveLangData()}),t.appendChild(a)},generateUserLang=function(){var r=document.querySelector(".cv-preview-lang"),e=JSON.parse(localStorage.getItem("langData"))||[];0<e.length&&(r.innerHTML='<h2 class="cv-preview-title">Języki:</h2>'),e.forEach(function(e){var t=document.createElement("div"),a=(t.classList.add("preview-lang-box"),document.createElement("p")),n=(a.classList.add("preview-lang-lang"),a.textContent=e.language,document.createElement("p")),l=(n.classList.add("space"),n.textContent="-",document.createElement("p"));l.classList.add("preview-lang-lvl"),l.textContent=e.level,t.append(a,n,l),r.append(t)})},saveLangData=function(){var e=document.querySelectorAll(".language-form"),n=[];e.forEach(function(e){var t=e.getAttribute("data-id")||Date.now().toString(),a=(e.setAttribute("data-id",t),e.querySelector('[name="language"]').value),e=e.querySelector('[name="level"]').value;n.push({id:t,language:a,level:e})}),localStorage.setItem("langData",JSON.stringify(n)),document.querySelector(".cv-preview-lang").innerHTML="",generateUserLang()},loadLangData=function(){(JSON.parse(localStorage.getItem("langData"))||[]).forEach(function(e){createLanguage(e)}),generateUserLang()},createSkills=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-skills"),a=document.createElement("form");a.classList.add("skills-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML=' \n\t<label class="label" for="skills">Umiętność:</label>\n    <input class="input" type="text" id="skills" name="skills" value="'.concat(e.skill||"",'" placeholder="Znajmość Google Search Console">\n\t<button class="delete">Usuń</button>\n\t'),a.querySelectorAll("input").forEach(function(e){e.addEventListener("input",saveSkillsData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveSkillsData()}),t.append(a)},generateUserSkills=function(){var a,e=document.querySelector(".cv-preview-skills"),t=JSON.parse(localStorage.getItem("skillsData"))||[];0<t.length&&(e.innerHTML=' <h2 class="cv-preview-skills-title">Umiejętności:</h2>',(a=document.createElement("ul")).classList.add("preview-skill-list"),t.forEach(function(e){var t=document.createElement("li");t.classList.add("preview-skill-item"),t.textContent=e.skill,a.appendChild(t)}),e.appendChild(a))},saveSkillsData=function(){var e=document.querySelectorAll(".skills-form"),a=[];e.forEach(function(e){var t=e.getAttribute("data-id")||Date.now().toString(),e=e.querySelector('[name="skills"]').value;a.push({id:t,skill:e})}),localStorage.setItem("skillsData",JSON.stringify(a)),document.querySelector(".cv-preview-skills").innerHTML="",generateUserSkills()},loadSkillData=function(){(JSON.parse(localStorage.getItem("skillsData"))||[]).forEach(function(e){createSkills(e)}),generateUserSkills()},generateUserDataAbout=function(){var e=document.querySelector(".cv-preview-about"),t=JSON.parse(localStorage.getItem("userData"))||{},a=t.name||t.lastName||t.email||t.tel,n=t.img;e.innerHTML=a||n?" \n\t\t".concat(n?' \n\t\t<div class="img-preview-box">\n\t\t\t<img class="img-preview" src="'.concat(t.img,'" alt="Podgląd zdjęcia">\n\t\t</div>'):"","\n\t\t").concat(a?' \n\t\t<h2 class="cv-preview-title">Dane osobowe:</h2>\n\t\t'.concat(t.name||t.lastName?'<p class="preview">Imię i Nazwisko:</p>':""," \n\t\t").concat(t.name||t.lastName?'<p class="name-preview left">'.concat(t.name+" "+t.lastName,"</p>"):"","\n\t\t").concat(t.email?'<p class="preview">Email:</p><p class="email-preview left">'.concat(t.email,"</p>"):""," \n\t\t").concat(t.tel?'<p class="preview">Telefon:</p><p class="tel-preview left">'.concat(t.tel,"</p>"):""):"","\n\t"):""},saveFormsDataAbout=function(){var e=document.querySelectorAll('[name="name"], [name="lastName"], [name="email"], [name="tel"], [name="img"]'),a={};e.forEach(function(t){var e;"img"===t.name&&t.files&&t.files[0]?((e=new FileReader).onload=function(e){a[t.name]=e.target.result,localStorage.setItem("userData",JSON.stringify(a)),generateUserDataAbout()},e.readAsDataURL(t.files[0])):a[t.name]=t.value}),localStorage.setItem("userData",JSON.stringify(a)),generateUserDataAbout()},loadFormsUserAbout=function(){var t=JSON.parse(localStorage.getItem("userData"))||{};document.querySelectorAll('[name="name"], [name="lastName"], [name="email"], [name="tel"] ').forEach(function(e){e.value=t[e.name]||""}),generateUserDataAbout()},generatePreview=(document.querySelectorAll('[name="name"], [name="lastName"], [name="email"], [name="tel"], [name="img"]').forEach(function(e){e.addEventListener("input",saveFormsDataAbout)}),function(){generateUserDataAbout(),generateUserJob(),generateUserLang(),generateUserEdu(),generateUserSkills()}),clearAll=function(){var e=document.querySelector(".cv-preview-job"),t=document.querySelector(".cv-preview-edu"),a=document.querySelector(".cv-preview-lang"),n=document.querySelector(".cv-preview-skills"),l=document.querySelector(".cv-preview-about"),r=document.querySelectorAll(".skills-form"),o=document.querySelectorAll(".edu-form"),c=document.querySelectorAll(".language-form"),i=document.querySelectorAll(".job-form"),e=(e.textContent="",t.textContent="",a.textContent="",n.textContent="",l.textContent="",r.forEach(function(e){return e.remove()}),o.forEach(function(e){return e.remove()}),c.forEach(function(e){return e.remove()}),i.forEach(function(e){return e.remove()}),document.querySelector(".name-preview")),t=document.querySelector(".email-preview"),a=document.querySelector(".tel-preview"),n=(document.querySelector(".img-preview"),e&&(e.textContent=""),t&&(t.textContent=""),a&&(a.textContent=""),document.querySelector("#name")),l=document.querySelector("#lastName"),r=document.querySelector("#email"),o=document.querySelector("#tel"),c=(n.value="",l.value="",r.value="",o.value="",document.querySelector("#colorPicker"));document.querySelector(".left-side").style.backgroundColor="#dfdfdf",c.value="#dfdfdf",localStorage.clear()},changeColor=function(){var e=document.querySelector("#colorPicker");document.querySelector(".left-side").style.backgroundColor=e.value,localStorage.setItem("savedColor",e.value)},loadLocalStorage=function(){loadFormsUserAbout(),loadEduData(),loadLangData(),loadJobData(),loadSkillData();var e=document.querySelector("#colorPicker"),t=localStorage.getItem("savedColor");t&&(document.querySelector(".left-side").style.backgroundColor=t,e.value=t),e.addEventListener("input",changeColor)},jsPDF=window.jspdf.jsPDF;function generatePDF(){var e=document.querySelector(".cv-preview");html2canvas(e,{scale:2,useCORS:!0}).then(function(e){var t=e.toDataURL("image/png"),a=new jsPDF({orientation:"p",unit:"mm",format:"a4"}),n=a.internal.pageSize.getWidth(),l=a.internal.pageSize.getHeight(),r=n,o=e.height*r/e.width,c=0;if(l<o)for(;c<o;)a.addImage(t,"PNG",0,-c,r,o),(c+=l)<o&&a.addPage();else a.addImage(t,"PNG",0,0,r,o);a.save("CV.pdf")}).catch(function(e){return console.error("Błąd generowania PDF:",e)})}jobBtn.addEventListener("click",createJob),eduBtn.addEventListener("click",createEduForm),langBtn.addEventListener("click",createLanguage),skillBtn.addEventListener("click",createSkills),btnDeleteAll.addEventListener("click",clearAll),downloadBtn.addEventListener("click",generatePDF),document.addEventListener("DOMContentLoaded",loadLocalStorage);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
