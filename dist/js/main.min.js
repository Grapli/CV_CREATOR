var jobBtn=document.querySelector(".job-button"),eduBtn=document.querySelector(".edu-button"),langBtn=document.querySelector(".language-button"),skillBtn=document.querySelector(".skills-button"),btnDeleteAll=document.querySelector(".btn-delete-all"),downloadBtn=document.querySelector(".download"),createJob=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-job"),a=document.createElement("form");a.classList.add("job-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML='\n\t<label for="company" class="label">Firma:</label>\n\t<input type="text" placeholder="np. IT Software house" id="company" name="company" class="input" value="'.concat(e.company||"",'">\t\n\t<label for="job-title" class="label">Stanowisko:</label>\n\t<input type="text" placeholder="np. Specjalista" id="job-title" name="job-title" class="input" value="').concat(e.role||"",'">\n\t<label for="job-start" class="label">Od:</label>\n\t<input type="month" id="job-start" name="job-start" class="input" value="').concat(e.start||"",'">\n\t<label for="job-end" class="label">Do:</label>\n\t<input type="month" id="job-end" name="job-end" class="input" value="').concat(e.end||"",'">\t\n\t<label for="job-description" class="label">Opis:</label>\n\t<textarea id="job-description" name="job-description" class="textarea">').concat(e.description||"",'</textarea>\n\t<button type="button" class="delete">Usuń</button>'),a.querySelectorAll("input, textarea").forEach(function(e){e.addEventListener("input",saveJobData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveJobData()}),t.appendChild(a)},generateUserJob=function(){var i=document.querySelector(".cv-preview-job"),e=JSON.parse(localStorage.getItem("jobData"))||[];0<e.length&&(i.innerHTML='<h2 class="cv-preview-job-title">Doświadczenie:</h2>'),e.forEach(function(e){var t=document.createElement("div"),a=(t.classList.add("preview-job-box"),document.createElement("h3")),n=(a.classList.add("preview-job-box-title"),a.textContent=e.company,document.createElement("h4")),l=(n.classList.add("preview-job-role"),n.textContent=e.role,document.createElement("div")),o=(l.classList.add("preview-job-date"),document.createElement("p")),r=(o.classList.add("preview-job-from"),o.textContent=e.start,document.createElement("p")),c=(r.classList.add("preview-job-to"),r.textContent=e.end,document.createElement("p")),u=(c.classList.add("space"),c.textContent="-",document.createElement("p"));u.classList.add("preview-job-description"),u.textContent=e.description,l.append(o,c,r),t.append(a,n,l,u),i.append(t)})},saveJobData=function(){var e=document.querySelectorAll(".job-form"),r=[];e.forEach(function(e){var t=e.getAttribute("data-id")||Date.now().toString(),a=e.querySelector('[name="company"]').value,n=e.querySelector('[name="job-title"]').value,l=e.querySelector('[name="job-start"]').value,o=e.querySelector('[name="job-end"]').value,e=e.querySelector('[name="job-description"]').value;r.push({id:t,company:a,role:n,start:l,end:o,description:e})}),localStorage.setItem("jobData",JSON.stringify(r)),document.querySelector(".cv-preview-job").innerHTML="",generateUserJob()},loadJobData=function(){(JSON.parse(localStorage.getItem("jobData"))||[]).forEach(function(e){createJob(e)}),generateUserJob()},createEduForm=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-edu"),a=document.createElement("form");a.classList.add("edu-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML='\n\t\t<label for="school" class="label">Szkoła/Uczelnia </label>\n        <input type="text" class="input" name="school" placeholder="Nazwa szkoły" value="'.concat(e.school||"",'" />\n\t\t<label for="degree" class="label">Kierunek/Stopień</label>\n        <input type="text" class="input" name="degree" placeholder="Stopień/tytuł" value="').concat(e.degree||"",'" />\n\t\t<label for="edu-start" class="label">Od:</label>\n        <input type="date"  class="input" name="edu-start" value="').concat(e.start||"",'" />\n\t\t<label for="edu-end" class="label">Do:</label>\n        <input type="date" class="input" name="edu-end" value="').concat(e.end||"",'" />\n        <button class="delete">Usuń</button>\n    '),a.querySelectorAll("input").forEach(function(e){e.addEventListener("input",saveEduData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveEduData()}),t.appendChild(a)},generateUserEdu=function(){var u=document.querySelector(".cv-preview-edu"),e=JSON.parse(localStorage.getItem("eduData"))||[];0<e.length&&(u.innerHTML='<h2 class="cv-preview-edu-title">Edukacja:</h2>'),e.forEach(function(e){var t=document.createElement("div"),a=(t.classList.add("preview-edu-box"),document.createElement("h3")),n=(a.classList.add("preview-edu-title"),a.textContent=e.school,document.createElement("h4")),l=(n.classList.add("preview-edu-role"),n.textContent=e.degree,document.createElement("div")),o=(l.classList.add("preview-edu-date"),document.createElement("p")),r=(o.classList.add("preview-edu-from"),o.textContent=e.start,document.createElement("p")),c=(r.classList.add("space"),r.textContent="-",document.createElement("p"));c.classList.add("preview-edu-to"),c.textContent=e.end,l.append(o,r,c),t.append(a,n,l),u.append(t)})},saveEduData=function(){var e=document.querySelectorAll(".edu-form"),o=[];e.forEach(function(e){var t=e.getAttribute("data-id")||Date.now().toString(),a=(e.setAttribute("data-id",t),e.querySelector('[name="school"]').value),n=e.querySelector('[name="degree"]').value,l=e.querySelector('[name="edu-start"]').value,e=e.querySelector('[name="edu-end"]').value;o.push({id:t,school:a,degree:n,start:l,end:e})}),localStorage.setItem("eduData",JSON.stringify(o)),document.querySelector(".cv-preview-edu").innerHTML="",generateUserEdu()},loadEduData=function(){(JSON.parse(localStorage.getItem("eduData"))||[]).forEach(function(e){createEduForm(e)}),generateUserEdu()},createLanguage=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-lang"),a=document.createElement("form");a.classList.add("language-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML='\n\t\t<label for="language" class="label">Język:</label>\n    \t<input type="text"  class="input" id="language" name="language" placeholder="Angielski" value="'.concat(e.language||"",'">\n    \t<label for="level" class="label"></label>\n      \t<input type="text" class="input" id="level" name="level" placeholder="C1" value="').concat(e.level||"",'">\n     \t<button class="delete">Usuń</button>\n\t'),a.querySelectorAll("input").forEach(function(e){e.addEventListener("input",saveLangData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveLangData()}),t.appendChild(a)},generateUserLang=function(){var o=document.querySelector(".cv-preview-lang"),e=JSON.parse(localStorage.getItem("langData"))||[];0<e.length&&(o.innerHTML='<h2 class="cv-preview-title">Języki:</h2>'),e.forEach(function(e){var t=document.createElement("div"),a=(t.classList.add("preview-lang-box"),document.createElement("p")),n=(a.classList.add("preview-lang-lang"),a.textContent=e.language,document.createElement("p")),l=(n.classList.add("space"),n.textContent="-",document.createElement("p"));l.classList.add("preview-lang-lvl"),l.textContent=e.level,t.append(a,n,l),o.append(t)})},saveLangData=function(){var e=document.querySelectorAll(".language-form"),n=[];e.forEach(function(e){var t=e.getAttribute("data-id")||Date.now().toString(),a=(e.setAttribute("data-id",t),e.querySelector('[name="language"]').value),e=e.querySelector('[name="level"]').value;n.push({id:t,language:a,level:e})}),localStorage.setItem("langData",JSON.stringify(n)),document.querySelector(".cv-preview-lang").innerHTML="",generateUserLang()},loadLangData=function(){(JSON.parse(localStorage.getItem("langData"))||[]).forEach(function(e){createLanguage(e)}),generateUserLang()},createSkills=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".cv-box-skills"),a=document.createElement("form");a.classList.add("skills-form","form"),a.setAttribute("data-id",e.id||Date.now().toString()),a.innerHTML=' \n\t<label class="label" for="skills">Umiętność:</label>\n    <input class="input" type="text" id="skills" name="skills" value="'.concat(e.skill||"",'" placeholder="Znajmość Google Search Console">\n\t<button class="delete">Usuń</button>\n\t'),a.querySelectorAll("input").forEach(function(e){e.addEventListener("input",saveSkillsData)}),a.querySelector(".delete").addEventListener("click",function(){a.remove(),saveSkillsData()}),t.append(a)},generateUserSkills=function(){var a,e=document.querySelector(".cv-preview-skills"),t=JSON.parse(localStorage.getItem("skillsData"))||[];0<t.length&&(e.innerHTML=' <h2 class="cv-preview-skills-title">Umiejętności:</h2>',(a=document.createElement("ul")).classList.add("preview-skill-list"),t.forEach(function(e){var t=document.createElement("li");t.classList.add("preview-skill-item"),t.textContent=e.skill,a.appendChild(t)}),e.appendChild(a))},saveSkillsData=function(){var e=document.querySelectorAll(".skills-form"),a=[];e.forEach(function(e){var t=e.getAttribute("data-id")||Date.now().toString(),e=e.querySelector('[name="skills"]').value;a.push({id:t,skill:e})}),localStorage.setItem("skillsData",JSON.stringify(a)),document.querySelector(".cv-preview-skills").innerHTML="",generateUserSkills()},loadSkillData=function(){(JSON.parse(localStorage.getItem("skillsData"))||[]).forEach(function(e){createSkills(e)}),generateUserSkills()},generateUserDataAbout=function(){var e=document.querySelector(".cv-preview-about"),t=document.querySelector("#name"),a=document.querySelector("#last-name"),n=document.querySelector("#email"),l=document.querySelector("#tel"),o=t.value||a.value||n.value||l.value,r=localStorage.getItem("img");e.innerHTML=o||r?" \n\t\t".concat(r?'\n\t\t<div class="img-preview-box">\n\t\t\t<img class="img-preview" src="'.concat(localStorage.getItem("img"),'" alt="Podgląd zdjęcia">\n\t\t</div>'):"","\n\t\t").concat(o?'\n\t\t<h2 class="cv-preview-title">Dane osobowe:</h2>\n\t\t'.concat(t.value||a.value?'<p class="preview">Imię i Nazwisko:</p>':"","\n\t\t").concat(t.value||a.value?'<p class="name-preview left">'.concat(t.value+" "+a.value,"</p>"):"","\n\t\t").concat(n.value?'<p class="preview">Email:</p><p class="email-preview left">'.concat(n.value,"</p>"):"","\n\t\t").concat(l.value?'<p class="preview">Telefon:</p><p class="tel-preview left">'.concat(l.value,"</p>"):""):"","\n\t"):""},saveFormsDataAbout=function(){document.querySelectorAll('[name="name"], [name="last-name"], [name="email"], [name="tel"], [name="img"]').forEach(function(t){var e;"img"===t.name&&t.files&&t.files[0]?((e=new FileReader).onload=function(e){localStorage.setItem(t.name,e.target.result),generateUserDataAbout()},e.readAsDataURL(t.files[0])):localStorage.setItem(t.name,t.value)}),generateUserDataAbout()},loadFormsUserAbout=function(){document.querySelectorAll('[name="name"], [name="last-name"], [name="email"], [name="tel"] ').forEach(function(e){e.value=localStorage.getItem(e.name)||""}),generateUserDataAbout()},generatePreview=(document.querySelectorAll('[name="name"], [name="last-name"], [name="email"], [name="tel"], [name="img"]').forEach(function(e){e.addEventListener("input",saveFormsDataAbout)}),function(){generateUserDataAbout(),generateUserJob(),generateUserLang(),generateUserEdu(),generateUserSkills()}),clearAll=function(){localStorage.clear();var e=document.querySelector(".cv-preview-job"),t=document.querySelector(".cv-preview-edu"),a=document.querySelector(".cv-preview-lang"),n=document.querySelector(".cv-preview-skills"),l=document.querySelector(".cv-preview-about"),o=document.querySelectorAll(".skills-form"),r=document.querySelectorAll(".edu-form"),c=document.querySelectorAll(".language-form"),u=document.querySelectorAll(".job-form"),e=(e.textContent="",t.textContent="",a.textContent="",n.textContent="",l.textContent="",o.forEach(function(e){return e.remove()}),r.forEach(function(e){return e.remove()}),c.forEach(function(e){return e.remove()}),u.forEach(function(e){return e.remove()}),document.querySelector(".name-preview")),t=document.querySelector(".email-preview"),a=document.querySelector(".tel-preview"),n=(document.querySelector(".img-preview"),e&&(e.textContent=""),t&&(t.textContent=""),a&&(a.textContent=""),document.querySelector("#name")),l=document.querySelector("#last-name"),o=document.querySelector("#email"),r=document.querySelector("#tel"),c=(n.value="",l.value="",o.value="",r.value="",document.querySelector("#colorPicker"));document.querySelector(".left-side").style.backgroundColor="#dfdfdf",c.value="#dfdfdf"},changeColor=function(){var e=document.querySelector("#colorPicker");document.querySelector(".left-side").style.backgroundColor=e.value,localStorage.setItem("savedColor",e.value)},loadLocalStorage=function(){loadFormsUserAbout(),loadEduData(),loadLangData(),loadJobData(),loadSkillData();var e=document.querySelector("#colorPicker"),t=localStorage.getItem("savedColor");t&&(document.querySelector(".left-side").style.backgroundColor=t,e.value=t),e.addEventListener("input",changeColor)};jobBtn.addEventListener("click",createJob),eduBtn.addEventListener("click",createEduForm),langBtn.addEventListener("click",createLanguage),skillBtn.addEventListener("click",createSkills),btnDeleteAll.addEventListener("click",clearAll),document.addEventListener("DOMContentLoaded",loadLocalStorage);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiam9iQnRuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZWR1QnRuIiwibGFuZ0J0biIsInNraWxsQnRuIiwiZG93bmxvYWRCdG4iLCJjcmVhdGVKb2IiLCJkYXRhIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9ybSIsImpvYkNvbnRhaW5lciIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsIkRhdGUiLCJub3ciLCJ0b1N0cmluZyIsImlubmVySFRNTCIsImNsYXNzTGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb25jYXQiLCJzdGFydCIsImVuZCIsImRlc2NyaXB0aW9uIiwicHJldmlld0pvYiIsImZvckVhY2giLCJpbnB1dCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzYXZlSm9iRGF0YSIsInNhdmVkRGF0YSIsImpvYkJveCIsImpvYlRpdGxlIiwidGV4dENvbnRlbnQiLCJqb2JSb2xlIiwiYWRkIiwiSlNPTiIsImdldEl0ZW0iLCJqb2JEYXRlQm94Iiwiam9iRnJvbSIsImpvYlRvIiwiam9iU3BhY2UiLCJjb21wYW55Iiwiam9iRGVzY3JpcHRpb24iLCJhcHBlbmQiLCJqb2JEYXRhIiwiam9iRm9ybXMiLCJqb2JOYW1lIiwiZ2V0QXR0cmlidXRlIiwiam9iRW5kIiwicHVzaCIsInJvbGUiLCJqb2JTdGFydCIsInZhbHVlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImdlbmVyYXRlVXNlckpvYiIsImxvYWRKb2JEYXRhIiwicGFyc2UiLCJjcmVhdGVFZHVGb3JtIiwiZWR1Q29udGFpbmVyIiwidW5kZWZpbmVkIiwic2F2ZUVkdURhdGEiLCJzZXRBdHRyaWJ1dGUiLCJzY2hvb2wiLCJkZWdyZWUiLCJlZHVCb3giLCJlZHVUaXRsZSIsImdlbmVyYXRlVXNlckVkdSIsImVkdURhdGUiLCJlZHVGcm9tIiwicHJldmlld0VkdSIsImVkdVNwYWNlIiwiZWR1VG8iLCJlZHVSb2xlIiwiZWR1Rm9ybXMiLCJlZHVEYXRhIiwiZWR1Um9sZUx2bCIsImVkdVNjaG9vbCIsImVkdVN0YXJ0IiwiZWR1RW5kIiwibG9hZEVkdURhdGEiLCJzdHJpbmdpZnkiLCJjcmVhdGVMYW5ndWFnZSIsImxhbmdDb250YWluZXIiLCJyZW1vdmUiLCJzYXZlTGFuZ0RhdGEiLCJwcmV2aWV3TGFuZyIsImxldmVsIiwibGFuZ0JveCIsImxhbmciLCJsYW5nU3BhY2UiLCJsYW5nTHZsIiwibGFuZ0Zvcm1zIiwibGFuZ0RhdGEiLCJsYW5nTmFtZSIsImxhbmd1YWdlIiwibGFuZ0xldmVsIiwiZ2VuZXJhdGVVc2VyTGFuZyIsImxvYWRMYW5nRGF0YSIsImNyZWF0ZVNraWxscyIsInNraWxsc0NvbnRhaW5lciIsInNhdmVTa2lsbHNEYXRhIiwiZ2VuZXJhdGVVc2VyU2tpbGxzIiwicHJldmlld1NraWxscyIsInNraWxsSXRlbSIsInNraWxsTGlzdCIsImFwcGVuZENoaWxkIiwic2tpbGxzRm9ybXMiLCJza2lsbHNEYXRhIiwic2tpbGwiLCJnZW5lcmF0ZVVzZXJEYXRhQWJvdXQiLCJoYXNJbWFnZSIsImFib3V0UHJldmlld0NvbnRhaW5lciIsInNhdmVGb3Jtc0RhdGFBYm91dCIsIkZpbGVSZWFkZXIiLCJyZWFkZXIiLCJmb3JtTmFtZSIsImUiLCJ0YXJnZXQiLCJmb3JtTGFzdE5hbWUiLCJmb3JtRW1haWwiLCJyZWFkQXNEYXRhVVJMIiwiaGFzRGF0YSIsImZvcm1UZWwiLCJsb2FkRm9ybXNVc2VyQWJvdXQiLCJuYW1lIiwiY2xlYXJBbGwiLCJjbGVhciIsInNraWxsRm9ybXMiLCJmaWxlcyIsInByZXZpZXdBYm91dCIsInJlc3VsdCIsInVzZXJOYW1lIiwidXNlckVtYWlsIiwidXNlclRlbCIsImxlZnRQcmV2aWV3Iiwic3R5bGUiLCJjaGFuZ2VDb2xvciIsImlucHV0Q29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJsb2FkTG9jYWxTdG9yYWdlIiwibG9hZFNraWxsRGF0YSIsInNhdmVkQ29sb3IiLCJidG5EZWxldGVBbGwiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLE9BQVNDLFNBQVNDLGNBQWMsYUFBYSxFQUM3Q0MsT0FBU0YsU0FBU0MsY0FBYyxhQUFhLEVBRDdDRixRQUFTQyxTQUFTQyxjQUFjLGtCQUFjLEVBQzlDQyxTQUFTRixTQUFTQyxjQUFjLGdCQUFjLEVBQzlDRSxhQUFVSCxTQUFTQyxjQUFjLGlCQUFtQixFQUNwREcsWUFBV0osU0FBU0MsY0FBYyxXQUFnQixFQUVsREksVUFBY0wsV0FBU0MsSUFBVEQsRUFBQUEsRUFBQUEsVUFBQUEsUUFBQUEsS0FBQUEsSUFBQUEsVUFBQUEsR0FBQUEsVUFBQUEsR0FBUSxHQUV0Qk0sRUFBWU4sU0FBWk0sY0FBMkIsYUFBQSxFQUFkQyxFQUFJQyxTQUFBQyxjQUFBRCxNQUFBQSxFQUd0QkUsRUFGTUMsVUFBQUEsSUFBWSxXQUFZVixNQUFBQSxFQUc5QlMsRUFGTUEsYUFBT1YsVUFBU1ksRUFBYUMsSUFBQ0MsS0FBT0MsSUFBQSxFQUFBQyxTQUFBLENBQUEsRUFHM0NOLEVBRklPLFVBQUNDLG9LQUFBQSxPQWtCTFIsRUFBS1MsU0FBQUEsR0FBQUEsNEtBQUFBLEVBQUFBLE9BVEpaLEVBYUFHLE1BQVcsR0FBRSxxSUFBQSxFQUFBVSxPQUdnQmIsRUFBQWMsT0FBQSxHQUFBLCtIQUFBLEVBQUFELE9BRURiLEVBQUFlLEtBQUEsR0FBQSw2SUFBQSxFQUFBRixPQUVzQ2IsRUFBQWdCLGFBQUEsR0FBQSxtRUFBQSxFQVhuRWIsRUFhQ2MsaUJBQVdQLGlCQUFZLEVBQUFRLFFBQUEsU0FBQUMsR0FDeEJBLEVBQUFDLGlCQUFBLFFBQUFDLFdBQUEsQ0FaQSxDQWFBQyxFQVpBbkIsRUFhQ1QsY0FBZUQsU0FBU1ksRUFBQUEsaUJBQW9CLFFBQUEsV0FaNUNGLEVBYUFvQixPQUFPWixFQVpQVSxZQWFNRyxDQVpQLENBQUMsRUFDRHBCLEVBYVVxQixZQUFXdEIsQ0FBR0gsQ0FaekIsRUFjRTBCLGdCQUFrQkMsV0FabkIsSUFhQ0QsRUFBUUQsU0FBY3pCLGNBQVMsaUJBQUEsRUFDL0JzQixFQUFnQk0sS0FBR25DLE1BQVNZLGFBQWF3QixRQUFPLFNBQUEsQ0FBQSxHQUFBLEdBQzVCLEVBQXBCQyxFQUFXbkIsU0FaWE0sRUFhTWMsVUFBVXRDLHdEQVhqQjZCLEVBYVFKLFFBQUNPLFNBQUFBLEdBWlIsSUFhTU8sRUFBUXZDLFNBQVNZLGNBQWMsS0FBSSxFQUV6QzJCLEdBZEFULEVBYUtaLFVBQVVnQixJQUFJLGlCQUFpQixFQUM5QkYsU0FBa0JwQixjQUFJLElBQUEsR0FHNUI0QixHQWZBVCxFQWFNUyxVQUFXeEMsSUFBQUEsdUJBQTJCLEVBWjVDK0IsRUFhQVMsWUFBbUJOLEVBQUlPLFFBQ2RULFNBQWNwQixjQUFHLElBQUEsR0FHMUI4QixHQWZBVCxFQWFNUyxVQUFBQSxJQUFjLGtCQUFZOUIsRUFaaENxQixFQWFBUyxZQUFleEIsRUFBVWdCLEtBQ1ZGLFNBQVdwQixjQUFRVyxLQUFXLEdBRTdDTyxHQWRBTyxFQWFBQSxVQUFrQkMsSUFBQUEsa0JBQW1CQyxFQUN2QlIsU0FBUW5CLGNBQVd5QixHQUFBQSxHQUdsQ0UsR0FmQ0QsRUFhQWQsVUFBV21CLElBQU9iLGtCQUFPLEVBQzFCUSxFQUFFTixZQUFBekIsRUFBQWMsTUFDRnJCLFNBQUFZLGNBQUEsR0FBQSxHQUdJZ0MsR0FGTEwsRUFBTVgsVUFBY00sSUFBQSxnQkFBSE4sRUFDaEJXLEVBQU1NLFlBQVc3QyxFQUFTbUIsSUFDVm5CLFNBQUFZLGNBQUEsR0FBQSxHQUdUa0MsR0FGUEQsRUFBU3BCLFVBQVFTLElBQUEsT0FBQXhCLEVBWmhCOEIsRUFhUVIsWUFBUWUsSUFDSzlDLFNBQUFBLGNBQWMsR0FBQSxHQVpuQ3lDLEVBYWF4QixVQUFRakIsSUFBQUEseUJBQWMsRUFabkN5QyxFQWFjVixZQUFRL0IsRUFBQUEsWUFadEJvQyxFQWFNVyxPQUFTdEMsRUFBS1QsRUFBY3NDLENBQUEsRUFabENULEVBYU1ZLE9BQUFBLEVBQWlCaEMsRUFBS1QsRUFBY3lDLENBQUEsRUFaMUNsQixFQWFReUIsT0FBS25CLENBQUEsQ0FaZCxDQUFDLENBQ0YsRUFXdUNvQixZQUFhLFdBVG5ELElBU3FEN0IsRUFBTzhCLFNBQVFoQyxpQkFBQSxXQUFBLEVBUmhFeUIsRUFRdUVJLEdBUDNFSCxFQU9tRnRCLFFBQVcsU0FBQWIsR0FON0YsSUFNZ0hHLEVBQUFILEVBQUFxQyxhQUFBLFNBQUEsR0FBQWpDLEtBQUFDLElBQUEsRUFBQUMsU0FBQSxFQUMvRzhCLEVBQUFwQyxFQUFBVCxjQUFBLGtCQUFBLEVBQUFtRCxNQUNGQyxFQUFhQyxFQUFRckQsY0FBV2tDLG9CQUF1QixFQUFDaUIsTUFDbEQ1QixFQUFheEIsRUFBQUEsY0FBU0Msb0JBQWMsRUFBa0JtRCxNQUM1RDVCLEVBQVdQLEVBQVNoQixjQUFLLGtCQUFBLEVBQUFtRCxNQUN6QkcsRUFBaUI3QyxFQUFBVCxjQUFBLDBCQUFBLEVBQUFtRCxNQUNqQlIsRUFBQUssS0FBQSxDQUFBcEMsR0FBQUEsRUFBQTRCLFFBQUFLLEVBQUFJLEtBQUFqQixFQUFBWixNQUFBOEIsRUFBQTdCLElBQUEwQixFQUFBekIsWUFBQW1CLENBQUEsQ0FBQSxDQUNELENBQUEsRUFMQ1csYUFNTXhCLFFBQWdCLFVBQU93QixLQUFBQSxVQUFhakIsQ0FBUSxDQUFBLEVBQ2hDcEMsU0FBQUMsY0FBUSxpQkFBQSxFQUN6QkssVUFBZSxHQUxoQmlELGdCQU1FLENBTEgsRUFPQ0MsWUFBQSxZQUNrQnJCLEtBQUdzQixNQUFoQkMsYUFBYXRCLFFBQWtCLFNBQUEsQ0FBQSxHQUFBLElBQVZYLFFBQUFqQixTQUFBQSxHQUMxQkYsVUFBTXFELENBQUFBLENBSk4sQ0FLQSxFQUpBSixnQkFLZXJCLENBSmhCLEVBTUt3QixjQUFVLFdBQUEsSUFBQW5ELEVBQUEsRUFBQUMsVUFBQUMsUUFBQW1ELEtBQUFBLElBQUFwRCxVQUFBLEdBQUFBLFVBQUEsR0FBQSxHQVdUVyxFQUFBQSxTQUF3QmxCLGNBQVUsYUFBUyxFQUMvQ3lCLEVBQU1DLFNBQUFBLGNBQTBCa0MsTUFBQUEsRUFkakNuRCxFQWVFUSxVQUFBZ0IsSUFBQSxXQUFBLE1BQUEsRUFkRnhCLEVBZUlvRCxhQUFDN0QsVUFBdUJNLEVBQUVvQixJQUFBQSxLQUFBQSxJQUFpQixFQUFBWCxTQUFTLENBQUEsRUFkeEROLEVBZUNBLFVBQVcsOEpBQUFVLE9BRVZiLEVBQUF3RCxRQUFBLEdBQUEsa0tBQUEsRUFBQTNDLE9BRUZiLEVBQUF5RCxRQUFBLEdBQUEsZ0lBQUEsRUFBQTVDLE9BRTREYixFQUFBYyxPQUFBLEdBQUEsMkhBQUEsRUFBQUQsT0FFbENiLEVBQUFlLEtBQUEsR0FBQSwwREFBQSxFQVoxQlosRUFlQW1CLGlCQUFrQixPQUFBdEIsRUFBQUEsUUFBUSxTQUFBbUIsR0FkekJBLEVBZU11QyxpQkFBaUIsUUFBQ3JELFdBQW1CLENBZDVDLENBQUMsRUFDREYsRUFlQ1QsY0FBaUJELFNBQVNZLEVBQUFBLGlCQUFtQixRQUFBLFdBZDdDRixFQWVBd0QsT0FBU2hELEVBZFQyQyxZQWVTN0IsQ0FkVixDQUFDLEVBQ0QyQixFQWVTekMsWUFBY1IsQ0FBQSxDQWR4QixFQWdCRXlELGdCQUFnQm5FLFdBZGpCLElBZUNvRSxFQUFRbEQsU0FBY2pCLGNBQUEsaUJBQW1CLEVBQ3pDNEIsRUFBZ0I3QixLQUFBQSxNQUFTWSxhQUFjd0IsUUFBSSxTQUFBLENBQUEsR0FBQSxHQUN6QkYsRUFBbEJtQyxFQUFRbkQsU0FkUm9ELEVBZVF0QyxVQUFXLG1EQWJwQkgsRUFlQzBDLFFBQVNyRCxTQUFBQSxHQWRULElBZUFxRCxFQUFTdkMsU0FBV3BCLGNBQU0sS0FBQSxFQUUxQjRELEdBaEJBUCxFQWVNTyxVQUFReEUsSUFBQUEsaUJBQXVCLEVBQ3RCQSxTQUFLWSxjQUFpQixJQUFBLEdBR3JDcUQsR0FqQkFDLEVBZU1sQyxVQUFXRSxJQUFHM0IsbUJBQVEsRUFkNUIyRCxFQWVPbEMsWUFBUXFDLEVBQVNFLE9BQ1ZMLFNBQVF0RCxjQUFXd0QsSUFBUSxHQUcxQ0EsR0FqQkNLLEVBZUFILFVBQVczQixJQUFPc0Isa0JBQU8sRUFDMUJRLEVBQUV6QyxZQUFBekIsRUFBQXlELE9BQ0ZoRSxTQUFBWSxjQUFBLEtBQUEsR0FFTThELEdBRFBOLEVBQU1QLFVBQWMzQixJQUFBLGtCQUFNLEVBQ1JsQyxTQUFTbUIsY0FBQUEsR0FBaUIsR0FHcENOLEdBRlB3RCxFQUFJTSxVQUFZekMsSUFBQSxrQkFBQSxFQUNoQndDLEVBQVExQyxZQUFTekIsRUFBQUcsTUFDQXFDLFNBQUFBLGNBQXVCLEdBQUlqQyxHQUdyQzhELEdBakJOTCxFQWVLVCxVQUFZNUIsSUFBQyxPQUFTLEVBZDNCcUMsRUFlTU0sWUFBaUI1RSxJQUNqQjJFLFNBQWlCaEUsY0FBYyxHQUFDLEdBZHRDNEQsRUFlTU0sVUFBUTVDLElBQUd4QixnQkFBbUIsRUFkcEM4RCxFQWVNTyxZQUFjOUUsRUFBQUEsSUFkcEJtRSxFQWVBTyxPQUFhTixFQUFBRSxFQUFBQyxDQUFBLEVBZGJQLEVBY2lCdEIsT0FBQXVCLEVBQUFPLEVBQUFMLENBQUEsRUFiakJFLEVBYXlCM0IsT0FBRWtDLENBQVMsQ0FackMsQ0FBQyxDQUNGLEVBVzZFdkQsWUFBS3lELFdBVGpGLElBUzBGTCxFQUFBMUUsU0FBQW1CLGlCQUFBLFdBQUEsRUFDeEZ3RCxFQUFBLEdBUkZELEVBU0FyQixRQUFhQyxTQUFBQSxHQUNiLElBQU1nQixFQUFBQSxFQUFVdkIsYUFBWTlDLFNBQUFBLEdBQWNhLEtBQUFDLElBQUEsRUFBQUMsU0FBa0IsRUFFNURtRCxHQURBRyxFQUFBQSxhQUFXckQsVUFBY0osQ0FBQSxFQUNSSCxFQUFBVCxjQUFBLGlCQUFBLEVBQUFtRCxPQUNqQndCLEVBQUFsRSxFQUFBVCxjQUFBLGlCQUFBLEVBQUFtRCxNQUNLNEIsRUFBY3RFLEVBQUFULGNBQUgrRSxvQkFBUyxFQUFBNUIsTUFDbkJ2QixFQUFTbkIsRUFBT1QsY0FBT29ELGtCQUFxQixFQUFBRCxNQUNsRHZCLEVBQUFBLEtBQVVKLENBQUFBLEdBQUFBLEVBQVFzQyxPQUFBYyxFQUFRYixPQUFBWSxFQUFBdkQsTUFBQXlELEVBQUF4RCxJQUFBeUQsQ0FBQSxDQUFBLENBUjFCLENBQUMsRUFDRDFCLGFBU0VDLFFBQUEsVUFBQW5CLEtBQUE4QyxVQUFBTixDQUFBLENBQUEsRUFDZTNFLFNBQUFDLGNBQUEsaUJBQUEsRUFDakJnQixVQUFBLEdBQ0RrRCxnQkFBTWUsQ0FSTixFQVNPQyxZQUFhLFlBQ05uRixLQUFTWSxNQUFBQSxhQUFxQndCLFFBQUEsU0FBQSxDQUFBLEdBQUEsSUFDdENsQixRQUFVZ0IsU0FBQUEsR0FDZnhCLGNBQUtvRCxDQUFhLENBUGxCLENBUUFwRCxFQVBBeUQsZ0JBZ0JLaEQsQ0FmTixFQWlCRytELGVBQUEsV0FBQSxJQUFBM0UsRUFBQSxFQUFBQyxVQUFBQyxRQUFBbUQsS0FBQUEsSUFBQXBELFVBQUEsR0FBQUEsVUFBQSxHQUFBLEdBQ0dQLEVBQWNELFNBQVcyQixjQUFBQSxjQUEwQixFQUN2RGpCLEVBQUswRSxTQUFReEUsY0FBQSxNQUFBLEVBZmRGLEVBZ0JDMkUsVUFBWW5ELElBQUUsZ0JBQUEsTUFBQSxFQWZmeEIsRUFnQkVvRCxhQUFBLFVBQUF2RCxFQUFBTSxJQUFBQyxLQUFBQyxJQUFBLEVBQUFDLFNBQUEsQ0FBQSxFQWZGTixFQWdCQXlFLFVBQWEsa0tBQUEvRCxPQUdiYixFQUFNK0UsVUFBY3RGLEdBQUFBLGdKQUFBQSxFQUFBQSxPQUdnRE8sRUFBQWdGLE9BQUEsR0FBQSxxREFBQSxFQWJwRTdFLEVBZ0JDUyxpQkFBZ0JuQixPQUFTWSxFQUFBQSxRQUFhLFNBQUFjLEdBZnRDQSxFQWdCQThELGlCQUFxQixRQUFDSCxZQUFtQixDQWYxQyxDQUFDLEVBQ0QzRSxFQWdCQytFLGNBQWV2RCxTQUFJLEVBQUFQLGlCQUFvQixRQUFBLFdBZnZDakIsRUFnQkErRSxPQUFLekQsRUFmTHFELGFBZ0JNSyxDQWZQLENBQUMsRUFDRFAsRUFnQlduRCxZQUFXdEIsQ0FBTSxDQWY3QixFQWlCRWlGLGlCQUFxQixXQWZ0QixJQWdCQ0EsRUFBUTNELFNBQWtCL0IsY0FBTSxrQkFBQSxFQUNoQ3VGLEVBQWVDLEtBQUloQyxNQUFFaUMsYUFBa0J0RCxRQUFDLFVBQUEsQ0FBQSxHQUFBLEdBQ3JCb0QsRUFBbkJGLEVBQVc3RSxTQUNaNkUsRUFBRXJFLFVBQUEsNkNBRUhZLEVBQU13RCxRQUFlLFNBQUE5RSxHQUNwQixJQUFNcUYsRUFBWTVGLFNBQVNtQixjQUFBQSxLQUFpQixFQUU1Q3lFLEdBREFKLEVBQUlLLFVBQWEzRCxJQUFBLGtCQUFBLEVBQ1BULFNBQVFiLGNBQVEsR0FBQSxHQUduQmtGLEdBbEJOTCxFQWdCQXZFLFVBQWVnQixJQUFDYSxtQkFBc0IsRUFmdEMwQyxFQWdCQS9FLFlBQWlCSCxFQUFDd0YsU0FDRHJGLFNBQUtULGNBQWMsR0FBQSxHQUVsQjBGLEdBakJsQkQsRUFnQk1NLFVBQVl0RixJQUFLVCxPQUFBQSxFQWZ2QnlGLEVBZ0JRMUQsWUFBTSxJQUFJaEMsU0FBQVksY0FBQSxHQUFBLEdBZGxCK0UsRUFjb0JJLFVBQVVELElBQVEsa0JBQUEsRUFidENILEVBYXdDSixZQUFPUyxFQUFBQSxNQVovQ1IsRUFZMkQ3QyxPQUFBOEMsRUFBQUMsRUFBQUMsQ0FBQSxFQUM1REwsRUFBRTNDLE9BQUE2QyxDQUFBLENBWEYsQ0FZQW5DLENBWEQsRUFhQ2lDLGFBQVlyRSxXQVhaLElBWUFnRixFQUFpQmpHLFNBQUNtQixpQkFBQSxnQkFBQSxFQUNsQjBFLEVBQUEsR0FDREQsRUFBTU0sUUFBZSxTQUFBeEYsR0FDcEIsSUFBTW1CLEVBQUFBLEVBQVlNLGFBQVdrQixTQUFBQSxHQUFhakIsS0FBUXJCLElBQUEsRUFBQUMsU0FBWSxFQUU3RGtFLEdBRERyRCxFQUFBQSxhQUFrQixVQUFBdEIsQ0FBQUEsRUFDRkEsRUFBS04sY0FBQSxtQkFBQSxFQUFBbUQsT0FDbkI0QyxFQUFBdEYsRUFBQVQsY0FBQSxnQkFBQSxFQUFBbUQsTUFDRjZDLEVBQUFBLEtBQUFBLENBQWdCcEYsR0FBQUEsRUFBRWtGLFNBQUFELEVBQUFQLE1BQUFTLENBQUEsQ0FBQSxDQUNsQixDQUFBLEVBQ0QzQyxhQUFNOEMsUUFBZSxXQUFmQSxLQUFBQSxVQUE4Qk4sQ0FBQSxDQUFBLEVBQVZyRixTQUFBUCxjQUFBTyxrQkFBQW9ELEVBQ25Cd0MsVUFBa0JwRyxHQVZ4QmlHLGlCQVdhakcsQ0FWZCxFQVlLa0csYUFBYyxZQUNKL0QsS0FBQXNCLE1BQUFKLGFBQUFqQixRQUFBLFVBQUEsQ0FBQSxHQUFBLElBT1RqQixRQUFBQSxTQUFBQSxHQWhCSitELGVBaUJNdkQsQ0FBQUEsQ0FoQlAsQ0FpQkEsRUFoQkFzRSxpQkFpQktoRyxDQWhCTixFQWtCRW9HLGFBQWdCLFdBQUEsSUFBQTlGLEVBQUEsRUFBQUMsVUFBQUMsUUFBQW1ELEtBQUFBLElBQUFwRCxVQUFBLEdBQUFBLFVBQUEsR0FBQSxHQUNmNEYsRUFBQXBHLFNBQUFDLGNBQUEsZ0JBQUEsRUFDRm1HLEVBQUFBLFNBQWdCekQsY0FBWSxNQUFBLEVBQzVCakMsRUFBQVEsVUFBQWdCLElBQUEsY0FBQSxNQUFBLEVBQ0R4QixFQUFNNEYsYUFBQUEsVUFBcUIvRixFQUFyQitGLElBQUFBLEtBQUFBLElBQUFBLEVBQWtCQSxTQUFTLENBQUEsRUFoQmhDNUYsRUFpQk02RixVQUFBQSxvSUFBQUEsT0FkSmhHLEVBaUJEZ0csT0FBYSxHQUFDdEYsNkZBQUFBLEVBYmZQLEVBaUJFUyxpQkFBa0JuQixPQUFRLEVBQUNZLFFBQUFBLFNBQUFBLEdBaEI1QmMsRUFpQkM4RSxpQkFBbUIsUUFBS0gsY0FBQSxDQWhCMUIsQ0FBQyxFQUNEM0YsRUFpQkUrRixjQUFVQyxTQUFZRixFQUFBQSxpQkFBVSxRQUFBLFdBaEJqQzlGLEVBaUJFMEUsT0FBQSxFQWhCRmlCLGVBaUJhLENBaEJkLENBaUJBLEVBQ0FELEVBQUF6RCxPQUFBakMsQ0FBQSxDQUNELEVBQ09pRyxtQkFBYzNHLFdBaEJwQixJQXFCQzRHLEVBSkdBLEVBQWU1RyxTQUFBQyxjQUFBLG9CQUFBLEVBQ25CMEcsRUFBWWxGLEtBQVFnQyxNQUFBSixhQUFRakIsUUFBQSxZQUFBLENBQUEsR0FBQSxHQUNYVyxFQUFoQmxCLEVBQVduQixTQWhCWDZGLEVBaUJjN0YsVUFBS1QsMkRBQ25CMkcsRUFBZ0I1RyxTQUFBWSxjQUFBLElBQUEsR0FBSU0sVUFBQWdCLElBQUEsb0JBQUEsRUFmcEJMLEVBZTJCSixRQUFFb0YsU0FBQUEsR0FkNUIsSUFjb0NMLEVBQUF4RyxTQUFBWSxjQUFBLElBQUEsRUFDckM0RixFQUFDdEYsVUFBQWdCLElBQUEsb0JBQUEsRUFDRm1CLEVBQUFBLFlBQXFCOUMsRUFBQXNHLE1BQ3JCSixFQUFNRixZQUFnQnZHLENBQVNDLENBQy9Cc0csQ0FBQUEsRUFDQUQsRUFBQUEsWUFBb0JHLENBQUEsRUFFckIsRUFDTzVFLGVBQWlCNEIsV0FidkIsSUFjQTVCLEVBQWtCN0IsU0FBQU8saUJBQVEsY0FBQSxFQUN6QjRGLEVBQWE1RixHQWJkb0csRUFjRWxGLFFBQUEsU0FBQWYsR0FDRjRGLElBQUFBLEVBQUFBLEVBQUFBLGFBQW9CLFNBQUEsR0FBQXhGLEtBQUFDLElBQUEsRUFBQUMsU0FBQSxFQUNwQjZGLEVBQUFuRyxFQUFBVCxjQUFBLGlCQUFBLEVBQUFtRCxNQUNEd0QsRUFBTUUsS0FBQUEsQ0FBQUEsR0FBQUEsRUFBQUEsTUFBd0JELENBQXhCQyxDQUFBQSxDQWJMLENBY0EsRUFiQXpELGFBY2NDLFFBQUd0RCxhQUFTQyxLQUFjZ0YsVUFBUTJCLENBQUEsQ0FBQSxFQUMzQjVHLFNBQVNDLGNBQWMsb0JBQWEsRUFDMUNnQixVQUFZaEIsR0FiM0JxRyxtQkFjZ0J0RyxDQWJqQixFQWVPK0csY0FBVzFELFlBQ2pCMkQsS0FBc0IvRixNQUFBQSxhQUNkbUIsUUFBSTJFLFlBQVEsQ0FBQSxHQUFBM0YsSUEwQnBCSyxRQUFBLFNBQUFsQixHQUNENEYsYUFBTWMsQ0FBQUEsQ0F2Q0wsQ0F3Q0EsRUF2Q0FYLG1CQTJDZSxDQTFDaEIsRUE0Q0dRLHNCQUFtQkksV0ExQ3JCLElBMkNFQyxFQUFnQm5ILFNBQWFDLGNBQUEsbUJBQUEsRUExQ3pCbUgsRUEyQ0gvRCxTQUFhQyxjQUFvQitELE9BQUVDLEVBMUNoQ0MsRUEyQ0hULFNBQXVCN0csY0FBQSxZQUFBLEVBQ3ZCdUgsRUFBQXhILFNBQUFDLGNBQUEsUUFBQSxFQUNEa0gsRUFBT00sU0FBYXhILGNBQWMsTUFBRSxFQUNwQ3lILEVBQU1OLEVBQUFoRSxPQUFBbUUsRUFBQW5FLE9BQUFvRSxFQUFBcEUsT0FBQXVFLEVBQUF2RSxNQUNOQyxFQUFZQSxhQUFTM0IsUUFBWUEsS0FBSyxFQTFDeENzRixFQTJDQy9GLFVBQ0R5RyxHQUFFWCxFQUFBLFVBQUEzRixPQUdIMkYsRUFBTWEsNEVBQUFBLE9BR3VCeEYsYUFBY3lGLFFBQVcsS0FBQSxFQUFBLHNDQUFBLEVBRXJEZixHQUFBQSxRQUFBQSxFQUFBQSxPQUtDcEYsRUFBTUMsOERBQUFBLE9BR1BtRixFQUFBQSxPQUFBQSxFQUF1QjFELE1BQUEsMENBQUEsR0FBQSxRQUFBLEVBQUFoQyxPQUV2QjZFLEVBQUFBLE9BQWtCc0IsRUFBQW5FLE1BQUEsZ0NBQUFoQyxPQUNEZ0csRUFBQWhFLE1BQUEsSUFBQW1FLEVBQUFuRSxNQUFBLE1BQUEsRUFDakJrRCxHQUFBQSxRQUFBQSxFQUFBQSxPQUVLd0IsRUFBUTFFLE1BQUcsOERBQUFoQyxPQUFNb0csRUFBQXBFLE1BQUEsTUFBQSxFQUFBLEdBQUEsUUFBQSxFQUFBaEMsT0FDdEJpQyxFQUFBQSxNQUFhMEUsOERBQUFBLE9BQU9KLEVBQUF2RSxNQUFBLE1BQUEsRUFBQSxFQUFBLEVBQ2Q1QixHQUFBQSxNQUFBQSxFQUdOLEVBNUNELEVBOENPd0csbUJBQXFCLFdBQ2JoSSxTQUFXbUIsaUJBQ3pCLCtFQTVDQSxFQStDQW1ELFFBQVd0QyxTQUFBQSxHQUNYc0QsSUFDQWlCLEVBRFl2RSxRQUFac0QsRUFBQUEsTUFBNEI1RCxFQUFBdUcsT0FBQXZHLEVBQUF1RyxNQUFBLEtBQzVCMUIsRUFBY3ZFLElBQUFBLFlBQ2RrRyxPQUFhbEcsU0FBY3FGLEdBQzNCVyxhQUFXdkcsUUFBUUMsRUFBQWhCLEtBQUkyRyxFQUFBQyxPQUFBYSxNQUFBLEVBQUFyQixzQkFBaUIsQ0FBQSxFQUN4Q3BDLEVBQVErQyxjQUFTL0YsRUFBQWhCLE1BQUksRUFBQSxHQUFpQjJDLGFBQUNDLFFBQUE1QixFQUFBbUcsS0FBQW5HLEVBQUEwQixLQUFBLENBdkN2QyxDQUFDLEVBQ0QwRCxzQkF1Q3dDLENBdEN6QyxFQXVDc0JjLG1CQUFpQixXQUFDNUgsU0FBQW1CLGlCQUFBLGtFQUFBLEVBQ2pDaUgsUUFBUSxTQUFBMUcsR0FDZEEsRUFBTTJHLE1BQVNoRixhQUFZcEQsUUFBQUEsRUFBYzRILElBQUEsR0FBQSxFQXBDekMsQ0FxQ0EsRUFwQ0FmLHNCQXFDZ0I5RyxDQXBDakIsRUEyQ08ySCxpQkExQ1AzSCxTQXNDQ21CLGlCQUFhbUgsK0VBQXdCLEVBQ3JDN0csUUFBTTJGLFNBQUFBLEdBQ04xRixFQUFNNkYsaUJBQWV2SCxRQUFTQyxrQkFBYyxDQXBDNUMsQ0FxQ0EsRUFDd0IsV0FwQ3hCNkcsc0JBcUNtQixFQXBDbkJ2RCxnQkFxQ2FILEVBcENiNkMsaUJBcUNlLEVBcENmOUIsZ0JBcUNhLEVBcENibUMsbUJBcUNtQnRHLENBcENwQixHQXNDQ3VJLFNBQVlDLFdBcENabkYsYUFxQ1dELE1BQUssRUFDaEIsSUFBQTVCLEVBQUF4QixTQUFBQyxjQUFBLGlCQUFBLEVBQ0t3SSxFQUFjekksU0FBZHlJLGNBQW9CLGlCQUFBLEVBQ25CQyxFQUFhMUksU0FBU0MsY0FBYyxrQkFBZSxFQUNuRHNJLEVBQWN2SSxTQUFTQyxjQUFjLG9CQUFhLEVBQ3hEc0ksRUFBa0JJLFNBQUFBLGNBQWtCRCxtQkFBZ0IsRUFFcERyRixFQUFhQyxTQUFRbkMsaUJBQWN1SCxjQUFpQixFQUNwRGhFLEVBQUExRSxTQUFBbUIsaUJBQUEsV0FBQSxFQUNEeUUsRUFBQTVGLFNBQUFtQixpQkFBQSxnQkFBQSxFQUNNeUgsRUFBQUEsU0FBbUJ6SCxpQkFBbkJ5SCxXQUF5QixFQVU3QkYsR0EvQ0RsSCxFQXNDQW9HLFlBQW9CLEdBckNwQnRELEVBc0NBVSxZQUFhLEdBckNiTSxFQXNDQVksWUFBYyxHQXJDZEssRUFzQ2F2RSxZQUFBLEdBckNia0csRUFzQ0FXLFlBQWUsR0FyQ2ZiLEVBc0NNVSxRQUFhMUksU0FBQUEsR0FBQUEsT0FBU0MsRUFBQUEsT0FBQUEsQ0FBYSxDQUFBLEVBckN6Q3lFLEVBc0NNb0UsUUFBVSxTQUFBcEksR0FBRzJDLE9BQUFBLEVBQVkrQixPQUFDaEQsQ0FBTyxDQUFBLEVBckN2Q3dELEVBc0NJa0QsUUFBWSxTQUFBcEksR0FBQSxPQUFBQSxFQUFBMEUsT0FBQSxDQUFBLENBQUEsRUFyQ2hCdkMsRUFzQ0M3QyxRQUFTQyxTQUFBQSxHQUFBQSxPQUFhUyxFQUFDMEUsT0FBQSxDQUFZLENBQUEsRUFDeEJoQyxTQUFRMEYsY0FBVSxlQUFBLEdBQzlCVCxFQUFBckksU0FBQUMsY0FBQSxnQkFBQSxFQUNBeUksRUFBVy9HLFNBQUFBLGNBQTBCOEcsY0FBWSxFQU1sRHJJLEdBTENKLFNBQUFDLGNBQUEsY0FBQSxFQUVERixJQUFPNEIsRUFBaUJLLFlBQVMxQixJQUNqQ0osSUFBT3lCLEVBQWlCSyxZQUFTMEIsSUFDakN2RCxJQUFRd0IsRUFBQUEsWUFBMEJ1RCxJQUN6QnZELFNBQWlCMUIsY0FBU2tHLE9BQWEsR0FDaEQ0QyxFQUFhcEgsU0FBaUIxQixjQUFTNkgsWUFBUyxFQUNoRDlILEVBQVMyQixTQUFpQjFCLGNBQUEsUUFBb0IySSxFQXRDdkNqQixFQUFVM0gsU0FBU0MsY0FBYyxNQUFNLEVBS3ZDeUksR0FKTnRCLEVBQVNoRSxNQUFRLEdBQ2pCbUUsRUFBYW5FLE1BQVEsR0FDckJvRSxFQUFVcEUsTUFBUSxHQUNsQnVFLEVBQVF2RSxNQUFRLEdBQ0dwRCxTQUFTQyxjQUFjLGNBQWMsR0FDcENELFNBQVNDLGNBQWMsWUFBWSxFQUMzQ3VJLE1BQU1HLGdCQUFrQixVQUNwQ0QsRUFBV3RGLE1BQVEsU0FDcEIsRUFDTXFGLFlBQWMsV0FDbkIsSUFBTUMsRUFBYTFJLFNBQVNDLGNBQWMsY0FBYyxFQUNwQ0QsU0FBU0MsY0FBYyxZQUFZLEVBQzNDdUksTUFBTUcsZ0JBQWtCRCxFQUFXdEYsTUFFL0NDLGFBQWFDLFFBQVEsYUFBY29GLEVBQVd0RixLQUFLLENBQ3BELEVBRU13RixpQkFBbUIsV0FDeEJoQixtQkFBbUIsRUFDbkI1QyxZQUFZLEVBQ1prQixhQUFhLEVBQ2IxQyxZQUFZLEVBQ1pxRixjQUFjLEVBQ2QsSUFBTUgsRUFBYTFJLFNBQVNDLGNBQWMsY0FBYyxFQUNsRDZJLEVBQWF6RixhQUFhakIsUUFBUSxZQUFZLEVBQ2hEMEcsSUFDSDlJLFNBQVNDLGNBQWMsWUFBWSxFQUFFdUksTUFBTUcsZ0JBQWtCRyxFQUM3REosRUFBV3RGLE1BQVEwRixHQUVwQkosRUFBVy9HLGlCQUFpQixRQUFTOEcsV0FBVyxDQUNqRCxFQUVBMUksT0FBTzRCLGlCQUFpQixRQUFTckIsU0FBUyxFQUMxQ0osT0FBT3lCLGlCQUFpQixRQUFTK0IsYUFBYSxFQUM5Q3ZELFFBQVF3QixpQkFBaUIsUUFBU3VELGNBQWMsRUFDaEQ5RSxTQUFTdUIsaUJBQWlCLFFBQVN3RSxZQUFZLEVBQy9DNEMsYUFBYXBILGlCQUFpQixRQUFTbUcsUUFBUSxFQUMvQzlILFNBQVMyQixpQkFBaUIsbUJBQW9CaUgsZ0JBQWdCIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgam9iQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpvYi1idXR0b24nKVxyXG5jb25zdCBlZHVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWR1LWJ1dHRvbicpXHJcbmNvbnN0IGxhbmdCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGFuZ3VhZ2UtYnV0dG9uJylcclxuY29uc3Qgc2tpbGxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2tpbGxzLWJ1dHRvbicpXHJcbmNvbnN0IGJ0bkRlbGV0ZUFsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4tZGVsZXRlLWFsbCcpXHJcbmNvbnN0IGRvd25sb2FkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRvd25sb2FkJylcclxuXHJcbmNvbnN0IGNyZWF0ZUpvYiA9IChkYXRhID0ge30pID0+IHtcclxuXHRjb25zdCBqb2JDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3YtYm94LWpvYicpXHJcblx0Y29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKVxyXG5cdGZvcm0uY2xhc3NMaXN0LmFkZCgnam9iLWZvcm0nLCAnZm9ybScpXHJcblx0Zm9ybS5zZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnLCBkYXRhLmlkIHx8IERhdGUubm93KCkudG9TdHJpbmcoKSlcclxuXHRmb3JtLmlubmVySFRNTCA9IGBcclxuXHQ8bGFiZWwgZm9yPVwiY29tcGFueVwiIGNsYXNzPVwibGFiZWxcIj5GaXJtYTo8L2xhYmVsPlxyXG5cdDxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwibnAuIElUIFNvZnR3YXJlIGhvdXNlXCIgaWQ9XCJjb21wYW55XCIgbmFtZT1cImNvbXBhbnlcIiBjbGFzcz1cImlucHV0XCIgdmFsdWU9XCIke1xyXG5cdFx0ZGF0YS5jb21wYW55IHx8ICcnXHJcblx0fVwiPlx0XHJcblx0PGxhYmVsIGZvcj1cImpvYi10aXRsZVwiIGNsYXNzPVwibGFiZWxcIj5TdGFub3dpc2tvOjwvbGFiZWw+XHJcblx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJucC4gU3BlY2phbGlzdGFcIiBpZD1cImpvYi10aXRsZVwiIG5hbWU9XCJqb2ItdGl0bGVcIiBjbGFzcz1cImlucHV0XCIgdmFsdWU9XCIke1xyXG5cdFx0ZGF0YS5yb2xlIHx8ICcnXHJcblx0fVwiPlxyXG5cdDxsYWJlbCBmb3I9XCJqb2Itc3RhcnRcIiBjbGFzcz1cImxhYmVsXCI+T2Q6PC9sYWJlbD5cclxuXHQ8aW5wdXQgdHlwZT1cIm1vbnRoXCIgaWQ9XCJqb2Itc3RhcnRcIiBuYW1lPVwiam9iLXN0YXJ0XCIgY2xhc3M9XCJpbnB1dFwiIHZhbHVlPVwiJHtkYXRhLnN0YXJ0IHx8ICcnfVwiPlxyXG5cdDxsYWJlbCBmb3I9XCJqb2ItZW5kXCIgY2xhc3M9XCJsYWJlbFwiPkRvOjwvbGFiZWw+XHJcblx0PGlucHV0IHR5cGU9XCJtb250aFwiIGlkPVwiam9iLWVuZFwiIG5hbWU9XCJqb2ItZW5kXCIgY2xhc3M9XCJpbnB1dFwiIHZhbHVlPVwiJHtkYXRhLmVuZCB8fCAnJ31cIj5cdFxyXG5cdDxsYWJlbCBmb3I9XCJqb2ItZGVzY3JpcHRpb25cIiBjbGFzcz1cImxhYmVsXCI+T3Bpczo8L2xhYmVsPlxyXG5cdDx0ZXh0YXJlYSBpZD1cImpvYi1kZXNjcmlwdGlvblwiIG5hbWU9XCJqb2ItZGVzY3JpcHRpb25cIiBjbGFzcz1cInRleHRhcmVhXCI+JHtkYXRhLmRlc2NyaXB0aW9uIHx8ICcnfTwvdGV4dGFyZWE+XHJcblx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJkZWxldGVcIj5Vc3XFhDwvYnV0dG9uPmBcclxuXHRmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0LCB0ZXh0YXJlYScpLmZvckVhY2goaW5wdXQgPT4ge1xyXG5cdFx0aW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBzYXZlSm9iRGF0YSlcclxuXHR9KVxyXG5cdGZvcm0ucXVlcnlTZWxlY3RvcignLmRlbGV0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdFx0Zm9ybS5yZW1vdmUoKVxyXG5cdFx0c2F2ZUpvYkRhdGEoKVxyXG5cdH0pXHJcblx0am9iQ29udGFpbmVyLmFwcGVuZENoaWxkKGZvcm0pXHJcbn1cclxuY29uc3QgZ2VuZXJhdGVVc2VySm9iID0gKCkgPT4ge1xyXG5cdGNvbnN0IHByZXZpZXdKb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3YtcHJldmlldy1qb2InKVxyXG5cdGNvbnN0IHNhdmVkRGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2pvYkRhdGEnKSkgfHwgW11cclxuXHRpZiAoc2F2ZWREYXRhLmxlbmd0aCA+IDApIHtcclxuXHRcdHByZXZpZXdKb2IuaW5uZXJIVE1MID0gJzxoMiBjbGFzcz1cImN2LXByZXZpZXctam9iLXRpdGxlXCI+RG/Fm3dpYWRjemVuaWU6PC9oMj4nXHJcblx0fVxyXG5cdHNhdmVkRGF0YS5mb3JFYWNoKGRhdGEgPT4ge1xyXG5cdFx0Y29uc3Qgam9iQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuXHRcdGpvYkJveC5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LWpvYi1ib3gnKVxyXG5cdFx0Y29uc3Qgam9iVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpXHJcblx0XHRqb2JUaXRsZS5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LWpvYi1ib3gtdGl0bGUnKVxyXG5cdFx0am9iVGl0bGUudGV4dENvbnRlbnQgPSBkYXRhLmNvbXBhbnlcclxuXHRcdGNvbnN0IGpvYlJvbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoNCcpXHJcblx0XHRqb2JSb2xlLmNsYXNzTGlzdC5hZGQoJ3ByZXZpZXctam9iLXJvbGUnKVxyXG5cdFx0am9iUm9sZS50ZXh0Q29udGVudCA9IGRhdGEucm9sZVxyXG5cdFx0Y29uc3Qgam9iRGF0ZUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblx0XHRqb2JEYXRlQm94LmNsYXNzTGlzdC5hZGQoJ3ByZXZpZXctam9iLWRhdGUnKVxyXG5cdFx0Y29uc3Qgam9iRnJvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxyXG5cdFx0am9iRnJvbS5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LWpvYi1mcm9tJylcclxuXHRcdGpvYkZyb20udGV4dENvbnRlbnQgPSBkYXRhLnN0YXJ0XHJcblx0XHRjb25zdCBqb2JUbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxyXG5cdFx0am9iVG8uY2xhc3NMaXN0LmFkZCgncHJldmlldy1qb2ItdG8nKVxyXG5cdFx0am9iVG8udGV4dENvbnRlbnQgPSBkYXRhLmVuZFxyXG5cdFx0Y29uc3Qgam9iU3BhY2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuXHRcdGpvYlNwYWNlLmNsYXNzTGlzdC5hZGQoJ3NwYWNlJylcclxuXHRcdGpvYlNwYWNlLnRleHRDb250ZW50ID0gJy0nXHJcblx0XHRjb25zdCBqb2JEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxyXG5cdFx0am9iRGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZCgncHJldmlldy1qb2ItZGVzY3JpcHRpb24nKVxyXG5cdFx0am9iRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLmRlc2NyaXB0aW9uXHJcblx0XHRqb2JEYXRlQm94LmFwcGVuZChqb2JGcm9tLCBqb2JTcGFjZSwgam9iVG8pXHJcblx0XHRqb2JCb3guYXBwZW5kKGpvYlRpdGxlLCBqb2JSb2xlLCBqb2JEYXRlQm94LCBqb2JEZXNjcmlwdGlvbilcclxuXHRcdHByZXZpZXdKb2IuYXBwZW5kKGpvYkJveClcclxuXHR9KVxyXG59XHJcbmNvbnN0IHNhdmVKb2JEYXRhID0gKCkgPT4ge1xyXG5cdGNvbnN0IGpvYkZvcm1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpvYi1mb3JtJylcclxuXHRsZXQgam9iRGF0YSA9IFtdXHJcblx0am9iRm9ybXMuZm9yRWFjaChmb3JtID0+IHtcclxuXHRcdGNvbnN0IGlkID0gZm9ybS5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKSB8fCBEYXRlLm5vdygpLnRvU3RyaW5nKClcclxuXHRcdGNvbnN0IGpvYk5hbWUgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwiY29tcGFueVwiXScpLnZhbHVlXHJcblx0XHRjb25zdCBqb2JSb2xlID0gZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImpvYi10aXRsZVwiXScpLnZhbHVlXHJcblx0XHRjb25zdCBqb2JTdGFydCA9IGZvcm0ucXVlcnlTZWxlY3RvcignW25hbWU9XCJqb2Itc3RhcnRcIl0nKS52YWx1ZVxyXG5cdFx0Y29uc3Qgam9iRW5kID0gZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImpvYi1lbmRcIl0nKS52YWx1ZVxyXG5cdFx0Y29uc3Qgam9iRGVzY3JpcHRpb24gPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwiam9iLWRlc2NyaXB0aW9uXCJdJykudmFsdWVcclxuXHRcdGpvYkRhdGEucHVzaCh7IGlkLCBjb21wYW55OiBqb2JOYW1lLCByb2xlOiBqb2JSb2xlLCBzdGFydDogam9iU3RhcnQsIGVuZDogam9iRW5kLCBkZXNjcmlwdGlvbjogam9iRGVzY3JpcHRpb24gfSlcclxuXHR9KVxyXG5cdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdqb2JEYXRhJywgSlNPTi5zdHJpbmdpZnkoam9iRGF0YSkpXHJcblx0Y29uc3QgcHJldmlld0pvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1wcmV2aWV3LWpvYicpXHJcblx0cHJldmlld0pvYi5pbm5lckhUTUwgPSAnJ1xyXG5cdGdlbmVyYXRlVXNlckpvYigpXHJcbn1cclxuY29uc3QgbG9hZEpvYkRhdGEgPSAoKSA9PiB7XHJcblx0Y29uc3Qgc2F2ZWREYXRhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnam9iRGF0YScpKSB8fCBbXVxyXG5cdHNhdmVkRGF0YS5mb3JFYWNoKGRhdGEgPT4ge1xyXG5cdFx0Y3JlYXRlSm9iKGRhdGEpXHJcblx0fSlcclxuXHRnZW5lcmF0ZVVzZXJKb2IoKVxyXG59XHJcbmNvbnN0IGNyZWF0ZUVkdUZvcm0gPSAoZGF0YSA9IHt9KSA9PiB7XHJcblx0Y29uc3QgZWR1Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN2LWJveC1lZHUnKVxyXG5cdGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJylcclxuXHRmb3JtLmNsYXNzTGlzdC5hZGQoJ2VkdS1mb3JtJywgJ2Zvcm0nKVxyXG5cdGZvcm0uc2V0QXR0cmlidXRlKCdkYXRhLWlkJywgZGF0YS5pZCB8fCBEYXRlLm5vdygpLnRvU3RyaW5nKCkpXHJcblx0Zm9ybS5pbm5lckhUTUwgPSBgXHJcblx0XHQ8bGFiZWwgZm9yPVwic2Nob29sXCIgY2xhc3M9XCJsYWJlbFwiPlN6a2/FgmEvVWN6ZWxuaWEgPC9sYWJlbD5cclxuICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImlucHV0XCIgbmFtZT1cInNjaG9vbFwiIHBsYWNlaG9sZGVyPVwiTmF6d2Egc3prb8WCeVwiIHZhbHVlPVwiJHtkYXRhLnNjaG9vbCB8fCAnJ31cIiAvPlxyXG5cdFx0PGxhYmVsIGZvcj1cImRlZ3JlZVwiIGNsYXNzPVwibGFiZWxcIj5LaWVydW5lay9TdG9waWXFhDwvbGFiZWw+XHJcbiAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dFwiIG5hbWU9XCJkZWdyZWVcIiBwbGFjZWhvbGRlcj1cIlN0b3BpZcWEL3R5dHXFglwiIHZhbHVlPVwiJHtkYXRhLmRlZ3JlZSB8fCAnJ31cIiAvPlxyXG5cdFx0PGxhYmVsIGZvcj1cImVkdS1zdGFydFwiIGNsYXNzPVwibGFiZWxcIj5PZDo8L2xhYmVsPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiZGF0ZVwiICBjbGFzcz1cImlucHV0XCIgbmFtZT1cImVkdS1zdGFydFwiIHZhbHVlPVwiJHtkYXRhLnN0YXJ0IHx8ICcnfVwiIC8+XHJcblx0XHQ8bGFiZWwgZm9yPVwiZWR1LWVuZFwiIGNsYXNzPVwibGFiZWxcIj5Ebzo8L2xhYmVsPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiZGF0ZVwiIGNsYXNzPVwiaW5wdXRcIiBuYW1lPVwiZWR1LWVuZFwiIHZhbHVlPVwiJHtkYXRhLmVuZCB8fCAnJ31cIiAvPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJkZWxldGVcIj5Vc3XFhDwvYnV0dG9uPlxyXG4gICAgYFxyXG5cdGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKS5mb3JFYWNoKGlucHV0ID0+IHtcclxuXHRcdGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0Jywgc2F2ZUVkdURhdGEpXHJcblx0fSlcclxuXHRmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5kZWxldGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHRcdGZvcm0ucmVtb3ZlKClcclxuXHRcdHNhdmVFZHVEYXRhKClcclxuXHR9KVxyXG5cdGVkdUNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtKVxyXG59XHJcbmNvbnN0IGdlbmVyYXRlVXNlckVkdSA9ICgpID0+IHtcclxuXHRjb25zdCBwcmV2aWV3RWR1ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN2LXByZXZpZXctZWR1JylcclxuXHRjb25zdCBzYXZlZERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlZHVEYXRhJykpIHx8IFtdXHJcblx0aWYgKHNhdmVkRGF0YS5sZW5ndGggPiAwKSB7XHJcblx0XHRwcmV2aWV3RWR1LmlubmVySFRNTCA9ICc8aDIgY2xhc3M9XCJjdi1wcmV2aWV3LWVkdS10aXRsZVwiPkVkdWthY2phOjwvaDI+J1xyXG5cdH1cclxuXHRzYXZlZERhdGEuZm9yRWFjaChkYXRhID0+IHtcclxuXHRcdGNvbnN0IGVkdUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblx0XHRlZHVCb3guY2xhc3NMaXN0LmFkZCgncHJldmlldy1lZHUtYm94JylcclxuXHRcdGNvbnN0IGVkdVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKVxyXG5cdFx0ZWR1VGl0bGUuY2xhc3NMaXN0LmFkZCgncHJldmlldy1lZHUtdGl0bGUnKVxyXG5cdFx0ZWR1VGl0bGUudGV4dENvbnRlbnQgPSBkYXRhLnNjaG9vbFxyXG5cdFx0Y29uc3QgZWR1Um9sZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0JylcclxuXHRcdGVkdVJvbGUuY2xhc3NMaXN0LmFkZCgncHJldmlldy1lZHUtcm9sZScpXHJcblx0XHRlZHVSb2xlLnRleHRDb250ZW50ID0gZGF0YS5kZWdyZWVcclxuXHRcdGNvbnN0IGVkdURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5cdFx0ZWR1RGF0ZS5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LWVkdS1kYXRlJylcclxuXHRcdGNvbnN0IGVkdUZyb20gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuXHRcdGVkdUZyb20uY2xhc3NMaXN0LmFkZCgncHJldmlldy1lZHUtZnJvbScpXHJcblx0XHRlZHVGcm9tLnRleHRDb250ZW50ID0gZGF0YS5zdGFydFxyXG5cdFx0Y29uc3QgZWR1U3BhY2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuXHRcdGVkdVNwYWNlLmNsYXNzTGlzdC5hZGQoJ3NwYWNlJylcclxuXHRcdGVkdVNwYWNlLnRleHRDb250ZW50ID0gJy0nXHJcblx0XHRjb25zdCBlZHVUbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxyXG5cdFx0ZWR1VG8uY2xhc3NMaXN0LmFkZCgncHJldmlldy1lZHUtdG8nKVxyXG5cdFx0ZWR1VG8udGV4dENvbnRlbnQgPSBkYXRhLmVuZFxyXG5cdFx0ZWR1RGF0ZS5hcHBlbmQoZWR1RnJvbSwgZWR1U3BhY2UsIGVkdVRvKVxyXG5cdFx0ZWR1Qm94LmFwcGVuZChlZHVUaXRsZSwgZWR1Um9sZSwgZWR1RGF0ZSlcclxuXHRcdHByZXZpZXdFZHUuYXBwZW5kKGVkdUJveClcclxuXHR9KVxyXG59XHJcbmNvbnN0IHNhdmVFZHVEYXRhID0gKCkgPT4ge1xyXG5cdGNvbnN0IGVkdUZvcm1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVkdS1mb3JtJylcclxuXHRsZXQgZWR1RGF0YSA9IFtdXHJcblx0ZWR1Rm9ybXMuZm9yRWFjaChmb3JtID0+IHtcclxuXHRcdGNvbnN0IGlkID0gZm9ybS5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKSB8fCBEYXRlLm5vdygpLnRvU3RyaW5nKClcclxuXHRcdGZvcm0uc2V0QXR0cmlidXRlKCdkYXRhLWlkJywgaWQpXHJcblx0XHRjb25zdCBlZHVTY2hvb2wgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwic2Nob29sXCJdJykudmFsdWVcclxuXHRcdGNvbnN0IGVkdVJvbGVMdmwgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwiZGVncmVlXCJdJykudmFsdWVcclxuXHRcdGNvbnN0IGVkdVN0YXJ0ID0gZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImVkdS1zdGFydFwiXScpLnZhbHVlXHJcblx0XHRjb25zdCBlZHVFbmQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwiZWR1LWVuZFwiXScpLnZhbHVlXHJcblx0XHRlZHVEYXRhLnB1c2goeyBpZCwgc2Nob29sOiBlZHVTY2hvb2wsIGRlZ3JlZTogZWR1Um9sZUx2bCwgc3RhcnQ6IGVkdVN0YXJ0LCBlbmQ6IGVkdUVuZCB9KVxyXG5cdH0pXHJcblx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2VkdURhdGEnLCBKU09OLnN0cmluZ2lmeShlZHVEYXRhKSlcclxuXHRjb25zdCBwcmV2aWV3RWR1ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN2LXByZXZpZXctZWR1JylcclxuXHRwcmV2aWV3RWR1LmlubmVySFRNTCA9ICcnXHJcblx0Z2VuZXJhdGVVc2VyRWR1KClcclxufVxyXG5jb25zdCBsb2FkRWR1RGF0YSA9ICgpID0+IHtcclxuXHRjb25zdCBzYXZlZERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlZHVEYXRhJykpIHx8IFtdXHJcblx0c2F2ZWREYXRhLmZvckVhY2goZGF0YSA9PiB7XHJcblx0XHRjcmVhdGVFZHVGb3JtKGRhdGEpXHJcblx0fSlcclxuXHRnZW5lcmF0ZVVzZXJFZHUoKVxyXG59XHJcbmNvbnN0IGNyZWF0ZUxhbmd1YWdlID0gKGRhdGEgPSB7fSkgPT4ge1xyXG5cdGNvbnN0IGxhbmdDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3YtYm94LWxhbmcnKVxyXG5cdGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJylcclxuXHRmb3JtLmNsYXNzTGlzdC5hZGQoJ2xhbmd1YWdlLWZvcm0nLCAnZm9ybScpXHJcblx0Zm9ybS5zZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnLCBkYXRhLmlkIHx8IERhdGUubm93KCkudG9TdHJpbmcoKSlcclxuXHRmb3JtLmlubmVySFRNTCA9IGBcclxuXHRcdDxsYWJlbCBmb3I9XCJsYW5ndWFnZVwiIGNsYXNzPVwibGFiZWxcIj5KxJl6eWs6PC9sYWJlbD5cclxuICAgIFx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgIGNsYXNzPVwiaW5wdXRcIiBpZD1cImxhbmd1YWdlXCIgbmFtZT1cImxhbmd1YWdlXCIgcGxhY2Vob2xkZXI9XCJBbmdpZWxza2lcIiB2YWx1ZT1cIiR7XHJcblx0XHRcdFx0ZGF0YS5sYW5ndWFnZSB8fCAnJ1xyXG5cdFx0XHR9XCI+XHJcbiAgICBcdDxsYWJlbCBmb3I9XCJsZXZlbFwiIGNsYXNzPVwibGFiZWxcIj48L2xhYmVsPlxyXG4gICAgICBcdDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiaW5wdXRcIiBpZD1cImxldmVsXCIgbmFtZT1cImxldmVsXCIgcGxhY2Vob2xkZXI9XCJDMVwiIHZhbHVlPVwiJHtkYXRhLmxldmVsIHx8ICcnfVwiPlxyXG4gICAgIFx0PGJ1dHRvbiBjbGFzcz1cImRlbGV0ZVwiPlVzdcWEPC9idXR0b24+XHJcblx0YFxyXG5cdGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKS5mb3JFYWNoKGlucHV0ID0+IHtcclxuXHRcdGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0Jywgc2F2ZUxhbmdEYXRhKVxyXG5cdH0pXHJcblx0Zm9ybS5xdWVyeVNlbGVjdG9yKCcuZGVsZXRlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcblx0XHRmb3JtLnJlbW92ZSgpXHJcblx0XHRzYXZlTGFuZ0RhdGEoKVxyXG5cdH0pXHJcblx0bGFuZ0NvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtKVxyXG59XHJcbmNvbnN0IGdlbmVyYXRlVXNlckxhbmcgPSAoKSA9PiB7XHJcblx0Y29uc3QgcHJldmlld0xhbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3YtcHJldmlldy1sYW5nJylcclxuXHRjb25zdCBzYXZlZERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5nRGF0YScpKSB8fCBbXVxyXG5cdGlmIChzYXZlZERhdGEubGVuZ3RoID4gMCkge1xyXG5cdFx0cHJldmlld0xhbmcuaW5uZXJIVE1MID0gJzxoMiBjbGFzcz1cImN2LXByZXZpZXctdGl0bGVcIj5KxJl6eWtpOjwvaDI+J1xyXG5cdH1cclxuXHRzYXZlZERhdGEuZm9yRWFjaChkYXRhID0+IHtcclxuXHRcdGNvbnN0IGxhbmdCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5cdFx0bGFuZ0JveC5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LWxhbmctYm94JylcclxuXHRcdGNvbnN0IGxhbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuXHRcdGxhbmcuY2xhc3NMaXN0LmFkZCgncHJldmlldy1sYW5nLWxhbmcnKVxyXG5cdFx0bGFuZy50ZXh0Q29udGVudCA9IGRhdGEubGFuZ3VhZ2VcclxuXHRcdGNvbnN0IGxhbmdTcGFjZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxyXG5cdFx0bGFuZ1NwYWNlLmNsYXNzTGlzdC5hZGQoJ3NwYWNlJylcclxuXHRcdGxhbmdTcGFjZS50ZXh0Q29udGVudCA9ICctJ1xyXG5cdFx0Y29uc3QgbGFuZ0x2bCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxyXG5cdFx0bGFuZ0x2bC5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LWxhbmctbHZsJylcclxuXHRcdGxhbmdMdmwudGV4dENvbnRlbnQgPSBkYXRhLmxldmVsXHJcblx0XHRsYW5nQm94LmFwcGVuZChsYW5nLCBsYW5nU3BhY2UsIGxhbmdMdmwpXHJcblx0XHRwcmV2aWV3TGFuZy5hcHBlbmQobGFuZ0JveClcclxuXHR9KVxyXG59XHJcbmNvbnN0IHNhdmVMYW5nRGF0YSA9ICgpID0+IHtcclxuXHRjb25zdCBsYW5nRm9ybXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubGFuZ3VhZ2UtZm9ybScpXHJcblx0bGV0IGxhbmdEYXRhID0gW11cclxuXHRsYW5nRm9ybXMuZm9yRWFjaChmb3JtID0+IHtcclxuXHRcdGNvbnN0IGlkID0gZm9ybS5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKSB8fCBEYXRlLm5vdygpLnRvU3RyaW5nKClcclxuXHRcdGZvcm0uc2V0QXR0cmlidXRlKCdkYXRhLWlkJywgaWQpXHJcblx0XHRjb25zdCBsYW5nTmFtZSA9IGZvcm0ucXVlcnlTZWxlY3RvcignW25hbWU9XCJsYW5ndWFnZVwiXScpLnZhbHVlXHJcblx0XHRjb25zdCBsYW5nTGV2ZWwgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwibGV2ZWxcIl0nKS52YWx1ZVxyXG5cdFx0bGFuZ0RhdGEucHVzaCh7IGlkLCBsYW5ndWFnZTogbGFuZ05hbWUsIGxldmVsOiBsYW5nTGV2ZWwgfSlcclxuXHR9KVxyXG5cdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsYW5nRGF0YScsIEpTT04uc3RyaW5naWZ5KGxhbmdEYXRhKSlcclxuXHRjb25zdCBwcmV2aWV3TGFuZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1wcmV2aWV3LWxhbmcnKVxyXG5cdHByZXZpZXdMYW5nLmlubmVySFRNTCA9ICcnXHJcblx0Z2VuZXJhdGVVc2VyTGFuZygpXHJcbn1cclxuY29uc3QgbG9hZExhbmdEYXRhID0gKCkgPT4ge1xyXG5cdGNvbnN0IHNhdmVkRGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xhbmdEYXRhJykpIHx8IFtdXHJcblx0c2F2ZWREYXRhLmZvckVhY2goZGF0YSA9PiB7XHJcblx0XHRjcmVhdGVMYW5ndWFnZShkYXRhKVxyXG5cdH0pXHJcblx0Z2VuZXJhdGVVc2VyTGFuZygpXHJcbn1cclxuY29uc3QgY3JlYXRlU2tpbGxzID0gKGRhdGEgPSB7fSkgPT4ge1xyXG5cdGNvbnN0IHNraWxsc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1ib3gtc2tpbGxzJylcclxuXHRjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpXHJcblx0Zm9ybS5jbGFzc0xpc3QuYWRkKCdza2lsbHMtZm9ybScsICdmb3JtJylcclxuXHRmb3JtLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIGRhdGEuaWQgfHwgRGF0ZS5ub3coKS50b1N0cmluZygpKVxyXG5cdGZvcm0uaW5uZXJIVE1MID0gYCBcclxuXHQ8bGFiZWwgY2xhc3M9XCJsYWJlbFwiIGZvcj1cInNraWxsc1wiPlVtacSZdG5vxZvEhzo8L2xhYmVsPlxyXG4gICAgPGlucHV0IGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiIGlkPVwic2tpbGxzXCIgbmFtZT1cInNraWxsc1wiIHZhbHVlPVwiJHtcclxuXHRcdFx0ZGF0YS5za2lsbCB8fCAnJ1xyXG5cdFx0fVwiIHBsYWNlaG9sZGVyPVwiWm5ham1vxZvEhyBHb29nbGUgU2VhcmNoIENvbnNvbGVcIj5cclxuXHQ8YnV0dG9uIGNsYXNzPVwiZGVsZXRlXCI+VXN1xYQ8L2J1dHRvbj5cclxuXHRgXHJcblx0Zm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpLmZvckVhY2goaW5wdXQgPT4ge1xyXG5cdFx0aW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBzYXZlU2tpbGxzRGF0YSlcclxuXHR9KVxyXG5cdGZvcm0ucXVlcnlTZWxlY3RvcignLmRlbGV0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdFx0Zm9ybS5yZW1vdmUoKVxyXG5cdFx0c2F2ZVNraWxsc0RhdGEoKVxyXG5cdH0pXHJcblx0c2tpbGxzQ29udGFpbmVyLmFwcGVuZChmb3JtKVxyXG59XHJcbmNvbnN0IGdlbmVyYXRlVXNlclNraWxscyA9ICgpID0+IHtcclxuXHRjb25zdCBwcmV2aWV3U2tpbGxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN2LXByZXZpZXctc2tpbGxzJylcclxuXHRjb25zdCBzYXZlZERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdza2lsbHNEYXRhJykpIHx8IFtdXHJcblx0aWYgKHNhdmVkRGF0YS5sZW5ndGggPiAwKSB7XHJcblx0XHRwcmV2aWV3U2tpbGxzLmlubmVySFRNTCA9ICcgPGgyIGNsYXNzPVwiY3YtcHJldmlldy1za2lsbHMtdGl0bGVcIj5VbWllasSZdG5vxZtjaTo8L2gyPidcclxuXHRcdGNvbnN0IHNraWxsTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJylcclxuXHRcdHNraWxsTGlzdC5jbGFzc0xpc3QuYWRkKCdwcmV2aWV3LXNraWxsLWxpc3QnKVxyXG5cdFx0c2F2ZWREYXRhLmZvckVhY2goZGF0YSA9PiB7XHJcblx0XHRcdGNvbnN0IHNraWxsSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcclxuXHRcdFx0c2tpbGxJdGVtLmNsYXNzTGlzdC5hZGQoJ3ByZXZpZXctc2tpbGwtaXRlbScpXHJcblx0XHRcdHNraWxsSXRlbS50ZXh0Q29udGVudCA9IGRhdGEuc2tpbGxcclxuXHRcdFx0c2tpbGxMaXN0LmFwcGVuZENoaWxkKHNraWxsSXRlbSlcclxuXHRcdH0pXHJcblx0XHRwcmV2aWV3U2tpbGxzLmFwcGVuZENoaWxkKHNraWxsTGlzdClcclxuXHR9XHJcbn1cclxuY29uc3Qgc2F2ZVNraWxsc0RhdGEgPSAoKSA9PiB7XHJcblx0Y29uc3Qgc2tpbGxzRm9ybXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2tpbGxzLWZvcm0nKVxyXG5cdGxldCBza2lsbHNEYXRhID0gW11cclxuXHRza2lsbHNGb3Jtcy5mb3JFYWNoKGZvcm0gPT4ge1xyXG5cdFx0Y29uc3QgaWQgPSBmb3JtLmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpIHx8IERhdGUubm93KCkudG9TdHJpbmcoKVxyXG5cdFx0Y29uc3Qgc2tpbGwgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwic2tpbGxzXCJdJykudmFsdWVcclxuXHRcdHNraWxsc0RhdGEucHVzaCh7IGlkLCBza2lsbDogc2tpbGwgfSlcclxuXHR9KVxyXG5cdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdza2lsbHNEYXRhJywgSlNPTi5zdHJpbmdpZnkoc2tpbGxzRGF0YSkpXHJcblx0Y29uc3QgcHJldmlld1NraWxscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1wcmV2aWV3LXNraWxscycpXHJcblx0cHJldmlld1NraWxscy5pbm5lckhUTUwgPSAnJ1xyXG5cdGdlbmVyYXRlVXNlclNraWxscygpXHJcbn1cclxuY29uc3QgbG9hZFNraWxsRGF0YSA9ICgpID0+IHtcclxuXHRjb25zdCBzYXZlZERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdza2lsbHNEYXRhJykpIHx8IFtdXHJcblx0c2F2ZWREYXRhLmZvckVhY2goZGF0YSA9PiB7XHJcblx0XHRjcmVhdGVTa2lsbHMoZGF0YSlcclxuXHR9KVxyXG5cdGdlbmVyYXRlVXNlclNraWxscygpXHJcbn1cclxuY29uc3QgZ2VuZXJhdGVVc2VyRGF0YUFib3V0ID0gKCkgPT4ge1xyXG5cdGNvbnN0IGFib3V0UHJldmlld0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1wcmV2aWV3LWFib3V0JylcclxuXHRjb25zdCBmb3JtTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJylcclxuXHRjb25zdCBmb3JtTGFzdE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGFzdC1uYW1lJylcclxuXHRjb25zdCBmb3JtRW1haWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZW1haWwnKVxyXG5cdGNvbnN0IGZvcm1UZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGVsJylcclxuXHRjb25zdCBoYXNEYXRhID0gZm9ybU5hbWUudmFsdWUgfHwgZm9ybUxhc3ROYW1lLnZhbHVlIHx8IGZvcm1FbWFpbC52YWx1ZSB8fCBmb3JtVGVsLnZhbHVlXHJcblx0Y29uc3QgaGFzSW1hZ2UgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaW1nJylcclxuXHRhYm91dFByZXZpZXdDb250YWluZXIuaW5uZXJIVE1MID1cclxuXHRcdGhhc0RhdGEgfHwgaGFzSW1hZ2VcclxuXHRcdFx0PyBgIFxyXG5cdFx0JHtcclxuXHRcdFx0aGFzSW1hZ2VcclxuXHRcdFx0XHQ/IGBcclxuXHRcdDxkaXYgY2xhc3M9XCJpbWctcHJldmlldy1ib3hcIj5cclxuXHRcdFx0PGltZyBjbGFzcz1cImltZy1wcmV2aWV3XCIgc3JjPVwiJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaW1nJyl9XCIgYWx0PVwiUG9kZ2zEhWQgemRqxJljaWFcIj5cclxuXHRcdDwvZGl2PmBcclxuXHRcdFx0XHQ6ICcnXHJcblx0XHR9XHJcblx0XHQke1xyXG5cdFx0XHRoYXNEYXRhXHJcblx0XHRcdFx0PyBgXHJcblx0XHQ8aDIgY2xhc3M9XCJjdi1wcmV2aWV3LXRpdGxlXCI+RGFuZSBvc29ib3dlOjwvaDI+XHJcblx0XHQke2Zvcm1OYW1lLnZhbHVlIHx8IGZvcm1MYXN0TmFtZS52YWx1ZSA/IGA8cCBjbGFzcz1cInByZXZpZXdcIj5JbWnEmSBpIE5hendpc2tvOjwvcD5gIDogJyd9XHJcblx0XHQke1xyXG5cdFx0XHRmb3JtTmFtZS52YWx1ZSB8fCBmb3JtTGFzdE5hbWUudmFsdWVcclxuXHRcdFx0XHQ/IGA8cCBjbGFzcz1cIm5hbWUtcHJldmlldyBsZWZ0XCI+JHtmb3JtTmFtZS52YWx1ZSArICcgJyArIGZvcm1MYXN0TmFtZS52YWx1ZX08L3A+YFxyXG5cdFx0XHRcdDogJydcclxuXHRcdH1cclxuXHRcdCR7Zm9ybUVtYWlsLnZhbHVlID8gYDxwIGNsYXNzPVwicHJldmlld1wiPkVtYWlsOjwvcD48cCBjbGFzcz1cImVtYWlsLXByZXZpZXcgbGVmdFwiPiR7Zm9ybUVtYWlsLnZhbHVlfTwvcD5gIDogJyd9XHJcblx0XHQke2Zvcm1UZWwudmFsdWUgPyBgPHAgY2xhc3M9XCJwcmV2aWV3XCI+VGVsZWZvbjo8L3A+PHAgY2xhc3M9XCJ0ZWwtcHJldmlldyBsZWZ0XCI+JHtmb3JtVGVsLnZhbHVlfTwvcD5gIDogJyd9YFxyXG5cdFx0XHRcdDogJydcclxuXHRcdH1cclxuXHRgXHJcblx0XHRcdDogJydcclxufVxyXG5jb25zdCBzYXZlRm9ybXNEYXRhQWJvdXQgPSAoKSA9PiB7XHJcblx0Y29uc3QgaW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcclxuXHRcdCdbbmFtZT1cIm5hbWVcIl0sIFtuYW1lPVwibGFzdC1uYW1lXCJdLCBbbmFtZT1cImVtYWlsXCJdLCBbbmFtZT1cInRlbFwiXSwgW25hbWU9XCJpbWdcIl0nXHJcblx0KVxyXG5cclxuXHRpbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcblx0XHRpZiAoaW5wdXQubmFtZSA9PT0gJ2ltZycgJiYgaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pIHtcclxuXHRcdFx0Y29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxyXG5cdFx0XHRyZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHtcclxuXHRcdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbShpbnB1dC5uYW1lLCBlLnRhcmdldC5yZXN1bHQpIC8vXHJcblx0XHRcdFx0Z2VuZXJhdGVVc2VyRGF0YUFib3V0KClcclxuXHRcdFx0fVxyXG5cdFx0XHRyZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1swXSlcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKGlucHV0Lm5hbWUsIGlucHV0LnZhbHVlKVxyXG5cdFx0fVxyXG5cdH0pXHJcblx0Z2VuZXJhdGVVc2VyRGF0YUFib3V0KClcclxufVxyXG5jb25zdCBsb2FkRm9ybXNVc2VyQWJvdXQgPSAoKSA9PiB7XHJcblx0Y29uc3QgaW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW25hbWU9XCJuYW1lXCJdLCBbbmFtZT1cImxhc3QtbmFtZVwiXSwgW25hbWU9XCJlbWFpbFwiXSwgW25hbWU9XCJ0ZWxcIl0gJylcclxuXHRpbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcblx0XHRpbnB1dC52YWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGlucHV0Lm5hbWUpIHx8ICcnXHJcblx0fSlcclxuXHRnZW5lcmF0ZVVzZXJEYXRhQWJvdXQoKVxyXG59XHJcbmRvY3VtZW50XHJcblx0LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tuYW1lPVwibmFtZVwiXSwgW25hbWU9XCJsYXN0LW5hbWVcIl0sIFtuYW1lPVwiZW1haWxcIl0sIFtuYW1lPVwidGVsXCJdLCBbbmFtZT1cImltZ1wiXScpXHJcblx0LmZvckVhY2goaW5wdXQgPT4ge1xyXG5cdFx0aW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBzYXZlRm9ybXNEYXRhQWJvdXQpXHJcblx0fSlcclxuY29uc3QgZ2VuZXJhdGVQcmV2aWV3ID0gKCkgPT4ge1xyXG5cdGdlbmVyYXRlVXNlckRhdGFBYm91dCgpXHJcblx0Z2VuZXJhdGVVc2VySm9iKClcclxuXHRnZW5lcmF0ZVVzZXJMYW5nKClcclxuXHRnZW5lcmF0ZVVzZXJFZHUoKVxyXG5cdGdlbmVyYXRlVXNlclNraWxscygpXHJcbn1cclxuY29uc3QgY2xlYXJBbGwgPSAoKSA9PiB7XHJcblx0bG9jYWxTdG9yYWdlLmNsZWFyKClcclxuXHRjb25zdCBwcmV2aWV3Sm9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN2LXByZXZpZXctam9iJylcclxuXHRjb25zdCBwcmV2aWV3RWR1ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN2LXByZXZpZXctZWR1JylcclxuXHRjb25zdCBwcmV2aWV3TGFuZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1wcmV2aWV3LWxhbmcnKVxyXG5cdGNvbnN0IHByZXZpZXdTa2lsbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3YtcHJldmlldy1za2lsbHMnKVxyXG5cdGNvbnN0IHByZXZpZXdBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdi1wcmV2aWV3LWFib3V0JylcclxuXHRjb25zdCBza2lsbEZvcm1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNraWxscy1mb3JtJylcclxuXHRjb25zdCBlZHVGb3JtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lZHUtZm9ybScpXHJcblx0Y29uc3QgbGFuZ0Zvcm1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxhbmd1YWdlLWZvcm0nKVxyXG5cdGNvbnN0IGpvYkZvcm1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpvYi1mb3JtJylcclxuXHRwcmV2aWV3Sm9iLnRleHRDb250ZW50ID0gJydcclxuXHRwcmV2aWV3RWR1LnRleHRDb250ZW50ID0gJydcclxuXHRwcmV2aWV3TGFuZy50ZXh0Q29udGVudCA9ICcnXHJcblx0cHJldmlld1NraWxscy50ZXh0Q29udGVudCA9ICcnXHJcblx0cHJldmlld0Fib3V0LnRleHRDb250ZW50ID0gJydcclxuXHRza2lsbEZvcm1zLmZvckVhY2goZm9ybSA9PiBmb3JtLnJlbW92ZSgpKVxyXG5cdGVkdUZvcm1zLmZvckVhY2goZm9ybSA9PiBmb3JtLnJlbW92ZSgpKVxyXG5cdGxhbmdGb3Jtcy5mb3JFYWNoKGZvcm0gPT4gZm9ybS5yZW1vdmUoKSlcclxuXHRqb2JGb3Jtcy5mb3JFYWNoKGZvcm0gPT4gZm9ybS5yZW1vdmUoKSlcclxuXHRjb25zdCB1c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYW1lLXByZXZpZXcnKVxyXG5cdGNvbnN0IHVzZXJFbWFpbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbWFpbC1wcmV2aWV3JylcclxuXHRjb25zdCB1c2VyVGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRlbC1wcmV2aWV3JylcclxuXHRjb25zdCB1c2VySW1nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmltZy1wcmV2aWV3JylcclxuXHRpZiAodXNlck5hbWUpIHVzZXJOYW1lLnRleHRDb250ZW50ID0gJydcclxuXHRpZiAodXNlckVtYWlsKSB1c2VyRW1haWwudGV4dENvbnRlbnQgPSAnJ1xyXG5cdGlmICh1c2VyVGVsKSB1c2VyVGVsLnRleHRDb250ZW50ID0gJydcclxuXHRjb25zdCBmb3JtTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJylcclxuXHRjb25zdCBmb3JtTGFzdE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGFzdC1uYW1lJylcclxuXHRjb25zdCBmb3JtRW1haWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZW1haWwnKVxyXG5cdGNvbnN0IGZvcm1UZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGVsJylcclxuXHRmb3JtTmFtZS52YWx1ZSA9ICcnXHJcblx0Zm9ybUxhc3ROYW1lLnZhbHVlID0gJydcclxuXHRmb3JtRW1haWwudmFsdWUgPSAnJ1xyXG5cdGZvcm1UZWwudmFsdWUgPSAnJ1xyXG5cdGNvbnN0IGlucHV0Q29sb3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29sb3JQaWNrZXInKVxyXG5cdGNvbnN0IGxlZnRQcmV2aWV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxlZnQtc2lkZScpXHJcblx0bGVmdFByZXZpZXcuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNkZmRmZGYnXHJcblx0aW5wdXRDb2xvci52YWx1ZSA9ICcjZGZkZmRmJ1xyXG59XHJcbmNvbnN0IGNoYW5nZUNvbG9yID0gKCkgPT4ge1xyXG5cdGNvbnN0IGlucHV0Q29sb3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29sb3JQaWNrZXInKVxyXG5cdGNvbnN0IGxlZnRQcmV2aWV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxlZnQtc2lkZScpXHJcblx0bGVmdFByZXZpZXcuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gaW5wdXRDb2xvci52YWx1ZVxyXG5cclxuXHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2F2ZWRDb2xvcicsIGlucHV0Q29sb3IudmFsdWUpXHJcbn1cclxuLy9Mb2NhbFN0b3JhZ2VcclxuY29uc3QgbG9hZExvY2FsU3RvcmFnZSA9ICgpID0+IHtcclxuXHRsb2FkRm9ybXNVc2VyQWJvdXQoKVxyXG5cdGxvYWRFZHVEYXRhKClcclxuXHRsb2FkTGFuZ0RhdGEoKVxyXG5cdGxvYWRKb2JEYXRhKClcclxuXHRsb2FkU2tpbGxEYXRhKClcclxuXHRjb25zdCBpbnB1dENvbG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbG9yUGlja2VyJylcclxuXHRjb25zdCBzYXZlZENvbG9yID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3NhdmVkQ29sb3InKVxyXG5cdGlmIChzYXZlZENvbG9yKSB7XHJcblx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGVmdC1zaWRlJykuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gc2F2ZWRDb2xvclxyXG5cdFx0aW5wdXRDb2xvci52YWx1ZSA9IHNhdmVkQ29sb3JcclxuXHR9XHJcblx0aW5wdXRDb2xvci5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGNoYW5nZUNvbG9yKVxyXG59XHJcblxyXG5qb2JCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjcmVhdGVKb2IpXHJcbmVkdUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNyZWF0ZUVkdUZvcm0pXHJcbmxhbmdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjcmVhdGVMYW5ndWFnZSlcclxuc2tpbGxCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjcmVhdGVTa2lsbHMpXHJcbmJ0bkRlbGV0ZUFsbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsZWFyQWxsKVxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgbG9hZExvY2FsU3RvcmFnZSlcclxuIl19
